(window.webpackJsonp=window.webpackJsonp||[]).push([["X3mz"],{X3mz:function(s,a,t){"use strict";t.r(a);var v={},l=t("psIG"),_=Object(l.a)(v,function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{staticClass:"blog-container"},[t("BlogHeader"),s._v(" "),t("BlogContent",[t("div",{attrs:{slot:"content"},slot:"content"},[t("h2",[s._v("前言")]),s._v(" "),t("p",[s._v("\n                接着上一篇文章 "),t("a",{attrs:{href:"https://juejin.im/post/5cbc57a2f265da0380436cca",target:"_blank"}},[s._v("lodash 是如何实现深拷贝的（上）")]),s._v("，今天会继续解读 _.cloneDeep 的源码，来看看 lodash 是如何处理对象、函数、循环引用等的深拷贝问题的。\n            ")]),s._v(" "),t("h2",[s._v("baseClone 的源码实现")]),s._v(" "),t("p",[s._v("\n                先回顾一下它的源码，以及一些关键的注释\n                "),t("pre",{staticClass:"hljs cs"},[t("code",{},[t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("baseClone")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", bitmask, customizer, key, "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(", stack")]),s._v(")")]),s._v(" {"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" result"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 根据位掩码，切分判断入口")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isDeep = bitmask & CLONE_DEEP_FLAG"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isFlat = bitmask & CLONE_FLAT_FLAG"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isFull = bitmask & CLONE_SYMBOLS_FLAG"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 自定义 clone 方法，用于 _.cloneWith")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (customizer) {"),t("br"),s._v("    result = "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(" ? customizer("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", key, "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(", stack) : customizer("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("  }"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (result !== undefined) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("  }"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 过滤出原始类型，直接返回")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!isObject("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),t("br"),s._v("  }"),t("br"),s._v("  "),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isArr = Array.isArray("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" tag = getTag("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isArr) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理数组")]),t("br"),s._v("    result = initCloneArray("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!isDeep) {"),t("br"),s._v("      "),t("span",{staticClass:"hljs-comment"},[s._v("// 浅拷贝数组")]),t("br"),s._v("      "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" copyArray("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", result)"),t("br"),s._v("    }"),t("br"),s._v("  } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理对象")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isFunc = "),t("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" == "),t("span",{staticClass:"hljs-string"},[s._v("'function'")]),t("br"),s._v("    "),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isBuffer("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")) {"),t("br"),s._v("      "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" cloneBuffer("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", isDeep)"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (tag == objectTag || tag == argsTag || (isFunc && !"),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(")) {"),t("br"),s._v("      result = (isFlat || isFunc) ? {} : initCloneObject("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("      "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!isDeep) {"),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" isFlat"),t("br"),s._v("          ? copySymbolsIn("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", copyObject("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", keysIn("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v("), result))"),t("br"),s._v("          : copySymbols("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", Object.assign(result, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v("))"),t("br"),s._v("      }"),t("br"),s._v("    } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),t("br"),s._v("      "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isFunc || !cloneableTags[tag]) {"),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(" ? "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" : {}"),t("br"),s._v("      }"),t("br"),s._v("      result = initCloneByTag("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", tag, isDeep)"),t("br"),s._v("    }"),t("br"),s._v("  }"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 用 “栈” 处理循环引用")]),t("br"),s._v("  stack || (stack = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Stack)"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" stacked = stack."),t("span",{staticClass:"hljs-keyword"},[s._v("get")]),s._v("("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (stacked) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" stacked"),t("br"),s._v("  }"),t("br"),s._v("  stack."),t("span",{staticClass:"hljs-keyword"},[s._v("set")]),s._v("("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", result)"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理 Map")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (tag == mapTag) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(".forEach((subValue, key) => {"),t("br"),s._v("      result."),t("span",{staticClass:"hljs-keyword"},[s._v("set")]),s._v("(key, baseClone(subValue, bitmask, customizer, key, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", stack))"),t("br"),s._v("    })"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("  }"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理 Set")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (tag == setTag) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(".forEach((subValue) => {"),t("br"),s._v("      result."),t("span",{staticClass:"hljs-keyword"},[s._v("add")]),s._v("(baseClone(subValue, bitmask, customizer, subValue, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", stack))"),t("br"),s._v("    })"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("  }"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理 typedArray")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isTypedArray("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("  }"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" keysFunc = isFull"),t("br"),s._v("    ? (isFlat ? getAllKeysIn : getAllKeys)"),t("br"),s._v("    : (isFlat ? keysIn : keys)"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" props = isArr ? undefined : keysFunc("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 遍历赋值")]),t("br"),s._v("  arrayEach(props || "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", (subValue, key) => {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (props) {"),t("br"),s._v("      key = subValue"),t("br"),s._v("      subValue = "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v("[key]"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// Recursively populate clone (susceptible to call stack limits).")]),t("br"),s._v("    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", stack))"),t("br"),s._v("  })"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("}"),t("br")])])]),s._v(" "),t("h4",[s._v("处理对象和函数")]),s._v(" "),t("p",[s._v("\n                一些主要的判断入口，已经加上了注释。\n                "),t("pre",{staticClass:"hljs cs"},[t("code",{},[t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isArr = Array.isArray("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" tag = getTag("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isArr) {"),t("br"),s._v("    ... "),t("span",{staticClass:"hljs-comment"},[s._v("// 刚才数组的处理")]),t("br"),s._v("} "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 开始处理对象")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 对象是函数的标志位")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isFunc = "),t("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" == "),t("span",{staticClass:"hljs-string"},[s._v("'function'")]),t("br"),s._v("    "),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理 Buffer（缓冲区）对象")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isBuffer("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")) {"),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" cloneBuffer("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", isDeep)"),t("br"),s._v("    }"),t("br"),s._v("    "),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 如果 tag 是 '[object Object]'")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 或 tag 是 '[object Arguments]'")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 或 是函数但没有父对象（object 由 baseClone 传入，是 value 的父对象）")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (tag == objectTag || tag == argsTag || (isFunc && !"),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(")) {"),t("br"),s._v("        "),t("span",{staticClass:"hljs-comment"},[s._v("// 初始化 result")]),t("br"),s._v("        "),t("span",{staticClass:"hljs-comment"},[s._v("// 如果是原型链或函数时，设置为空对象")]),t("br"),s._v("        "),t("span",{staticClass:"hljs-comment"},[s._v("// 否则，新开一个对象，并将源对象的键值对依次拷贝进去")]),t("br"),s._v("        result = (isFlat || isFunc) ? {} : initCloneObject("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!isDeep) {"),t("br"),s._v("            "),t("span",{staticClass:"hljs-comment"},[s._v("// 进入对象的浅拷贝")]),t("br"),s._v("            "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" isFlat"),t("br"),s._v("            "),t("span",{staticClass:"hljs-comment"},[s._v("// 如果是原型链，则需要拷贝自身，还有继承的 symbols")]),t("br"),s._v("            ? copySymbolsIn("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", copyObject("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", keysIn("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v("), result))"),t("br"),s._v("            "),t("span",{staticClass:"hljs-comment"},[s._v("// 否则，只要拷贝自身的 symbols")]),t("br"),s._v("            : copySymbols("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", Object.assign(result, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v("))"),t("br"),s._v("        }"),t("br"),s._v("    } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),t("br"),s._v("        "),t("span",{staticClass:"hljs-comment"},[s._v("// 是函数 或者 不是error类型 或者 不是weakmap类型时")]),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isFunc || !cloneableTags[tag]) {"),t("br"),s._v("            "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(" ? "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" : {}"),t("br"),s._v("        }"),t("br"),s._v("        "),t("span",{staticClass:"hljs-comment"},[s._v("// 按需要初始化 cloneableTags 对象中剩余的类型")]),t("br"),s._v("        result = initCloneByTag("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", tag, isDeep)"),t("br"),s._v("    }"),t("br"),s._v("}")])]),s._v("\n                其中，"),t("code",[s._v("isBuffer")]),s._v(" 会处理 Buffer 类的拷贝，它是 Node.js 中的概念，用来创建一个专门存放二进制数据的缓存区，可以让 Node.js 处理二进制数据。\n            ")]),s._v(" "),t("p",[s._v("\n                在 baseClone 的外面，还定义了一个对象 cloneableTags，里面只有 error 和 weakmap 类型会返回 false，所以 "),t("code",[s._v("!cloneableTags[tag]")]),s._v(" 的意思就是，不是 error 或 weakmap 类型。\n            ")]),s._v(" "),t("p",[s._v("\n                接下来，来看如何初始化一个新的 Object 对象。\n                "),t("pre",{staticClass:"hljs cs"},[t("code",{},[t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("initCloneObject")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("object")])]),s._v(")")]),s._v(" {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(".constructor == "),t("span",{staticClass:"hljs-string"},[s._v("'function'")]),s._v(" && !isPrototype("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v("))"),t("br"),s._v("        ? Object.create(Object.getPrototypeOf("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v("))"),t("br"),s._v("        : {}"),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// ./isPrototype.js")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" objectProto = Object.prototype"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 用于检测自己是否在自己的原型链上")]),t("br"),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("isPrototype")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("value")])]),s._v(")")]),s._v(" {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" Ctor = "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" && "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(".constructor"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 如果 value 是函数，则取出该函数的原型对象")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 否则，取出对象的原型对象")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" proto = ("),t("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" Ctor == "),t("span",{staticClass:"hljs-string"},[s._v("'function'")]),s._v(" && Ctor.prototype) || objectProto"),t("br"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" === proto"),t("br"),s._v("}")])]),s._v("\n                其中，"),t("code",[s._v("typeof object.constructor == 'function'")]),s._v(" 的判断，是为了确定 value 的类型是对象或数组。\n            ")]),s._v(" "),t("p",[s._v("\n                然后用 "),t("code",[s._v("Object.create")]),s._v(" 生成新的对象。"),t("code",[s._v("Object.create()")]),s._v(" 方法用于创建一个新对象，使用现有的对象来提供新创建的对象的 __proto__。\n            ")]),s._v(" "),t("p",[t("code",[s._v("object.constructor")]),s._v(" 相当于 "),t("code",[s._v("new Object()")]),s._v("，而 Object 的构造函数是一个函数对象。\n                "),t("pre",{staticClass:"hljs typescript"},[t("code",{},[t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" obj = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("Object")]),s._v("();"),t("br"),t("br"),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" obj.constructor);"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 'function'")])])])]),s._v(" "),t("p",[s._v("\n                对象的原型，可以通过 "),t("code",[s._v("Object.getPrototypeOf(obj)")]),s._v(" 获取，它相当于过去使用的 "),t("code",[s._v("__proto__")]),s._v("。\n            ")]),s._v(" "),t("p",[t("code",[s._v("initCloneByTag")]),s._v(" 方法会处理剩余的多种类型的拷贝，有原始类型，也有如 "),t("code",[s._v("dateTag")]),s._v("、"),t("code",[s._v("dataViewTag")]),s._v("、"),t("code",[s._v("float32Tag")]),s._v("、"),t("code",[s._v("int16Tag")]),s._v("、"),t("code",[s._v("mapTag")]),s._v("、"),t("code",[s._v("setTag")]),s._v("、"),t("code",[s._v("regexpTag")]),s._v(" 等等。\n            ")]),s._v(" "),t("p",[s._v("\n                其中，"),t("code",[s._v("cloneTypedArray")]),s._v(" 方法用于拷贝类型数组。类型数组，是一种类似数组的对象，它由 ArrayBuffer、TypedArray、DataView 三类对象构成，通过这些对象为 JavaScript 提供了访问二进制数据的能力。\n            ")]),s._v(" "),t("h4",[s._v("循环引用")]),s._v(" "),t("p",[t("pre",{staticClass:"hljs cpp"},[t("code",{},[t("span",{staticClass:"hljs-comment"},[s._v("// 如果有 stack 作为参数传入，就用参数中的 stack")]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 不然就 new 一个 Stack")]),t("br"),t("span",{staticClass:"hljs-built_in"},[s._v("stack")]),s._v(" || ("),t("span",{staticClass:"hljs-built_in"},[s._v("stack")]),s._v(" = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Stack)"),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" stacked = "),t("span",{staticClass:"hljs-built_in"},[s._v("stack")]),s._v(".get(value)"),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (stacked) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" stacked"),t("br"),s._v("}"),t("br"),t("span",{staticClass:"hljs-built_in"},[s._v("stack")]),s._v("."),t("span",{staticClass:"hljs-built_in"},[s._v("set")]),s._v("(value, result)")])]),s._v("\n                与 "),t("a",{attrs:{href:"https://juejin.im/post/5cab479cf265da039d325df4",target:"_blank"}},[s._v("「前端面试题系列9」浅拷贝与深拷贝的含义、区别及实现")]),s._v(" 最后提到的 cloneForce 方案类似，利用了栈来解决循环引用的问题。\n            ")]),s._v(" "),t("p",[s._v("\n                如果 "),t("code",[s._v("stacked")]),s._v(" 有值，则表明已经在栈中存在，不然就 "),t("code",[s._v("value")]),s._v(" 和 "),t("code",[s._v("result")]),s._v(" 入栈。在 Stack 中的 set 方法：\n                "),t("pre",{staticClass:"hljs kotlin"},[t("code",{},[t("span",{staticClass:"hljs-keyword"},[s._v("constructor")]),s._v("(entries) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(" = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".__data__ = new ListCache(entries)"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".size = "),t("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(".size"),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("set")]),s._v("(key, value) {"),t("br"),s._v("    let "),t("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(" = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".__data__"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// data 是否在 ListCache 的构造函数中存在")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(" instanceof ListCache) {"),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" pairs = "),t("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(".__data__"),t("br"),s._v("        "),t("span",{staticClass:"hljs-comment"},[s._v("// LARGE_ARRAY_SIZE 为 200")]),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (pairs.length < LARGE_ARRAY_SIZE - "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(") {"),t("br"),s._v("            pairs.push([key, value])"),t("br"),s._v("            "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".size = ++"),t("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(".size"),t("br"),s._v("            "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),t("br"),s._v("        }"),t("br"),s._v("        "),t("span",{staticClass:"hljs-comment"},[s._v("// 超出200，则重置 data")]),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(" = "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".__data__ = new MapCache(pairs)"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// data 不在 ListCache 的构造函数中，则直接进行 set 操作")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v("."),t("span",{staticClass:"hljs-keyword"},[s._v("set")]),s._v("(key, value)"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".size = "),t("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(".size"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),t("br"),s._v("}")])])]),s._v(" "),t("h4",[s._v("Map 和 Set")]),s._v(" "),t("p",[s._v("\n                这两个类型的深拷贝利用了递归的思想，只是添加元素的方式有区别，"),t("code",[s._v("Map")]),s._v(" 用 "),t("code",[s._v("set")]),s._v("，"),t("code",[s._v("Set")]),s._v(" 用 "),t("code",[s._v("add")]),s._v("。\n                "),t("pre",{staticClass:"hljs cs"},[t("code",{},[t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (tag == mapTag) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(".forEach((subValue, key) => {"),t("br"),s._v("      result."),t("span",{staticClass:"hljs-keyword"},[s._v("set")]),s._v("(key, baseClone(subValue, bitmask, customizer, key, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", stack))"),t("br"),s._v("    })"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("  }"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (tag == setTag) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(".forEach((subValue) => {"),t("br"),s._v("      result."),t("span",{staticClass:"hljs-keyword"},[s._v("add")]),s._v("(baseClone(subValue, bitmask, customizer, subValue, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", stack))"),t("br"),s._v("    })"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("}")])])]),s._v(" "),t("h4",[s._v("Symbol 和 原型链")]),s._v(" "),t("p",[t("pre",{staticClass:"hljs cs"},[t("code",{},[t("span",{staticClass:"hljs-comment"},[s._v("// 获取数组 keys")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" keysFunc = isFull"),t("br"),s._v("    ? (isFlat ? getAllKeysIn : getAllKeys)"),t("br"),s._v("    : (isFlat ? keysIn : keys)"),t("br"),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" props = isArr ? undefined : keysFunc("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("arrayEach(props || "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", (subValue, key) => {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 如果 props 有值，则替换 key 和 subValue")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (props) {"),t("br"),s._v("        key = subValue"),t("br"),s._v("        subValue = "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v("[key]"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 递归克隆（易受调用堆栈限制）")]),t("br"),s._v("    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", stack))"),t("br"),s._v("})"),t("br"),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// ./getAllKeysIn")]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 返回一个包含 自身 和 原型链上的属性名 以及Symbol 的数组")]),t("br"),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("getAllKeysIn")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("object")])]),s._v(")")]),s._v(" {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" result = []"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" key "),t("span",{staticClass:"hljs-keyword"},[s._v("in")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(") {"),t("br"),s._v("        result.push(key)"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!Array.isArray("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(")) {"),t("br"),s._v("        result.push(...getSymbolsIn("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v("))"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// ./getAllKeys")]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 返回一个包含 自身 和 Symbol 的数组")]),t("br"),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("getAllKeys")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("object")])]),s._v(")")]),s._v(" {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" result = keys("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(")"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!Array.isArray("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(")) {"),t("br"),s._v("        result.push(...getSymbols("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v("))"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// ./keysIn")]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 返回一个 自身 和 原型链上的属性名 的数组")]),t("br"),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("keysIn")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("object")])]),s._v(")")]),s._v(" {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" result = []"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" key "),t("span",{staticClass:"hljs-keyword"},[s._v("in")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(") {"),t("br"),s._v("        result.push(key)"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// ./keys")]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 返回一个 自身属性名 的数组")]),t("br"),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("keys")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("object")])]),s._v(")")]),s._v(" {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" isArrayLike("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(")"),t("br"),s._v("        ? arrayLikeKeys("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(")"),t("br"),s._v("        : Object.keys(Object("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v("))"),t("br"),s._v("}")])]),s._v("\n                最后来看下 "),t("code",[s._v("assignValue")]),s._v(" 的实现。\n                "),t("pre",{staticClass:"hljs cs"},[t("code",{},[t("span",{staticClass:"hljs-comment"},[s._v("// ./assignValue")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" hasOwnProperty = Object.prototype."),t("span",{staticClass:"hljs-function"},[s._v("hasOwnProperty")]),t("br"),t("span",{staticClass:"hljs-function"}),t("br"),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("assignValue")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(", key, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")])]),s._v(")")]),s._v(" {"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" objValue = "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v("[key]"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!(hasOwnProperty.call("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(", key) && eq(objValue, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v("))) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// value 非零或者可用")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" !== "),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(" || ("),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(" / "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(") == ("),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(" / objValue)) {"),t("br"),s._v("      baseAssignValue("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(", key, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("    }"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// value 未定义，并且 object 中没有 key")]),t("br"),s._v("  } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" === undefined && !(key "),t("span",{staticClass:"hljs-keyword"},[s._v("in")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(")) {"),t("br"),s._v("    baseAssignValue("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(", key, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("  }"),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// ./baseAssignValue")]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 赋值的基础实现")]),t("br"),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("baseAssignValue")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(", key, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")])]),s._v(")")]),s._v(" {"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (key == "),t("span",{staticClass:"hljs-string"},[s._v("'__proto__'")]),s._v(") {"),t("br"),s._v("    Object.defineProperty("),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(", key, {"),t("br"),s._v("      "),t("span",{staticClass:"hljs-string"},[s._v("'configurable'")]),s._v(": "),t("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(","),t("br"),s._v("      "),t("span",{staticClass:"hljs-string"},[s._v("'enumerable'")]),s._v(": "),t("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(","),t("br"),s._v("      "),t("span",{staticClass:"hljs-string"},[s._v("'value'")]),s._v(": "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(","),t("br"),s._v("      "),t("span",{staticClass:"hljs-string"},[s._v("'writable'")]),s._v(": "),t("span",{staticClass:"hljs-literal"},[s._v("true")]),t("br"),s._v("    })"),t("br"),s._v("  } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v("[key] = "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),t("br"),s._v("  }"),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// ./eq")]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 比较两个值是否相等")]),t("br"),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("eq")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", other")]),s._v(")")]),s._v(" {"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" === other || ("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" !== "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" && other !== other)"),t("br"),s._v("}")])]),s._v("\n                最后的 eq 方法中的判断 "),t("code",[s._v("value !== value && other !== other")]),s._v("，这样的写法是为了判断 NaN。具体的可以参考这篇 "),t("a",{attrs:{href:"https://juejin.im/post/5c8c6c26f265da2db3059c93",target:"_blank"}},[s._v("「读懂源码系列2」我从 lodash 源码中学到的几个知识点")])]),s._v(" "),t("h2",[s._v("总结")]),s._v(" "),t("p",[s._v("\n                cloneDeep 中囊括了各种类型的深拷贝方法，比如 node 中的 buffer，类型数组等。用了栈的思想，解决循环引用的问题。Map 和 Set 的添加元素方法比较类似，分别为 set 和 add。NaN 是不等于自身的。\n            ")]),s._v(" "),t("p",[s._v("\n                深拷贝的源码解读，到此已经完结了。本篇的写作过程，同样地耗费了好几个晚上的时间，感觉真的是自己在跟自己较劲。只因为我想尽可能地把源码的实现过程说明白，其中查找资料外加理解思考，就耗费了许多时间，好在最终没有放弃，收获也是颇丰的，一些从源码中学到的技巧，也被我用到了实际项目中，提升了性能与可读性。。\n            ")]),s._v(" "),t("p",[s._v("\n                近阶段因为工作原因，写文章有所懈怠了，痛定思痛还是要继续写下去。自此，《超哥前端小栈》恢复更新，同时每篇文章也会同步更新到 "),t("a",{attrs:{href:"https://juejin.im/user/5a5d4522518825732b19d364",target:"_blank"}},[s._v("掘金")]),s._v("、"),t("a",{attrs:{href:"https://segmentfault.com/u/micherwa",target:"_blank"}},[s._v("segmentfault")]),s._v(" 和 "),t("a",{attrs:{href:"https://github.com/micherwa",target:"_blank"}},[s._v("github")]),s._v(" 上。\n            ")]),s._v(" "),t("p",[s._v("\n                个人的时间精力有限，在表述上有纰漏的地方，还望读者能多加指正，多多支持，期待能有更多的交流，感谢~\n            ")])])])],1)},[],!1,null,null,null);_.options.__file="clone-deep-in-lodash-2.vue";a.default=_.exports}}]);