(window.webpackJsonp=window.webpackJsonp||[]).push([["iZZO"],{iZZO:function(s,t,a){"use strict";a.r(t);var n={},l=a("psIG"),_=Object(l.a)(n,function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"blog-container"},[a("BlogHeader"),s._v(" "),a("BlogContent",{attrs:{useCatalog:!1}},[a("div",{attrs:{slot:"content"},slot:"content"},[a("p",[a("strong",[s._v("当浏览器检测到非用户操作产生的新弹出窗口，则会对其进行阻止。")]),s._v("因为浏览器认为这不是一个用户希望看到的页面。\n            ")]),s._v(" "),a("p",[s._v("\n                另外可以发现，当window.open为用户触发事件内部或者加载时，不会被拦截。而一旦将弹出代码移动到ajax或者一段异步代码内部，马上就出现被拦截的表现。\n            ")]),s._v(" "),a("h2",[s._v("解决方案：")]),s._v(" "),a("h4",[s._v("1.使用a标签替代")]),s._v(" "),a("p",[a("pre",{staticClass:"hljs qml"},[a("code",{},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("newWin")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("url, id")]),s._v(") ")]),s._v("{"),a("br"),s._v("    "),a("span",{staticClass:"hljs-built_in"},[s._v("var")]),s._v(" a = "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".createElement("),a("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(");"),a("br"),s._v("    a.setAttribute("),a("span",{staticClass:"hljs-string"},[s._v("'href'")]),s._v(", "),a("span",{staticClass:"hljs-built_in"},[s._v("url")]),s._v(");"),a("br"),s._v("    a.setAttribute("),a("span",{staticClass:"hljs-string"},[s._v("'target'")]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v("'_blank'")]),s._v(");"),a("br"),s._v("    a.setAttribute("),a("span",{staticClass:"hljs-string"},[s._v("'id'")]),s._v(", id);"),a("br"),s._v("    "),a("span",{staticClass:"hljs-comment"},[s._v("// 防止反复添加")]),a("br"),s._v("    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(!"),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".getElementById(id)) "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".body.appendChild(a);"),a("br"),s._v("    a.click();"),a("br"),s._v("}")])]),s._v("\n                将此函数绑定到click的事件回调中，就可以避免大部分浏览器对窗口弹出的拦截\n            ")]),s._v(" "),a("h4",[s._v("2.先弹出窗口，然后重定向")]),s._v(" "),a("p",[s._v("\n                这其实是一种变通方案，核心思想是:先通过用户点击打开页面，然后再对页面进行重定向。\n                "),a("pre",{staticClass:"hljs haxe"},[a("code",{},[s._v("xx.addEventListener("),a("span",{staticClass:"hljs-string"},[s._v("'click'")]),s._v(", "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ")]),s._v("() {"),a("br"),s._v("    "),a("span",{staticClass:"hljs-comment"},[s._v("// 打开页面，此处最好使用提示页面")]),a("br"),s._v("    "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("newWin")]),s._v(" = window.open("),a("span",{staticClass:"hljs-string"},[s._v("'loading page'")]),s._v(");"),a("br"),a("br"),s._v("    ajax().done("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")])]),s._v("() {"),a("br"),s._v("        "),a("span",{staticClass:"hljs-comment"},[s._v("// 重定向到目标页面")]),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("newWin")]),s._v(".location.href = "),a("span",{staticClass:"hljs-string"},[s._v("'target url'")]),s._v(";"),a("br"),s._v("    });"),a("br"),s._v("});")])])]),s._v(" "),a("p",[s._v("\n                以上方法其实是打开了两个地址，为了避免打开两次真正的目标页面，让用户察觉到页面的重定向，可以在打开第一个地址的时候给出一个类似‘当前页面正在加载中，请稍后。。’的简单提示页。\n            ")])])])],1)},[],!1,null,null,null);_.options.__file="solution-of-open-new-page.vue";t.default=_.exports}}]);