(window.webpackJsonp=window.webpackJsonp||[]).push([["NKbC"],{NKbC:function(e,n,t){"use strict";t.r(n);var o={},l=t("psIG"),_=Object(l.a)(o,function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"blog-container"},[t("BlogHeader"),e._v(" "),t("BlogContent",[t("div",{attrs:{slot:"content"},slot:"content"},[t("h2",[e._v("前言")]),e._v(" "),t("p",[e._v("\n                上一篇文章 "),t("a",{attrs:{href:"",target:"_blank"}},[e._v("「前端面试题系列9」浅拷贝与深拷贝的含义、区别及实现")]),e._v(" 中提到了深拷贝的实现方法，从递归调用，到 JSON，再到终极方案 cloneForce。\n            ")]),e._v(" "),t("p",[e._v("\n                不经让我想到，lodash 中的 "),t("code",[e._v("_.cloneDeep")]),e._v(" 方法，它也可以实现深拷贝的效果。今天，就让我们深入源码，来看一下 cloneDeep 是如何实现深拷贝的。\n            ")]),e._v(" "),t("h2",[e._v("_.cloneDeep 的源码实现")]),e._v(" "),t("p")])])],1)},[],!1,null,null,null);_.options.__file="clone-deep-in-lodash.vue";n.default=_.exports}}]);