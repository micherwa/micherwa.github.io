(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-43fc"],{"+N8K":function(s,a,t){"use strict";t.r(a);var l={},n=t("psIG"),v=Object(n.a)(l,function(){var s=this,a=s.$createElement,l=s._self._c||a;return l("div",{staticClass:"blog-container"},[l("BlogHeader"),s._v(" "),l("BlogContent",{attrs:{useCatalog:!0}},[l("div",{attrs:{slot:"content"},slot:"content"},[l("img",{attrs:{src:t("vAOG")}}),s._v(" "),l("h2",[s._v("前言")]),s._v(" "),l("p",[s._v("\n                上一篇文章 "),l("a",{attrs:{href:"https://juejin.im/post/5c7b8b4af265da2dcb679d99",target:"_blank"}},[s._v("「前端面试题系列8」数组去重(10 种浓缩版)")]),s._v(" 中提到了不少数组的常用操作。\n            ")]),s._v(" "),l("p",[s._v("\n                今天，会更具体地将数组的常用操作进行归纳和汇总，以便备不时之需。每组方法都会配以示例说明，有时我也会忘了某个方法是否会返回一个新的数组，如果你也有类似的困惑，那么看这篇就够了。希望能帮到有需要的同学。\n            ")]),s._v(" "),l("h2",[s._v("ES5 中 Array 操作")]),s._v(" "),l("h4",[s._v("1、forEach")]),s._v(" "),l("p",[s._v("\n                Array 方法中最基本的一个，就是遍历，循环。基本用法："),l("code",[s._v("[].forEach(function(item, index, array) {});")]),s._v(" "),l("pre",{staticClass:"hljs smali"},[l("code",{},[s._v("const"),l("span",{staticClass:"hljs-built_in"},[s._v(" array ")]),s._v("= [1, 2, 3];"),l("span",{staticClass:"hljs-built_in"}),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("const ")]),s._v("result = [];"),l("br"),l("br"),s._v("array.forEach(function(item) {"),l("br"),s._v("    result.push(item);"),l("br"),s._v("});"),l("br"),s._v("console.log(result); // [1, 2, 3]")])])]),s._v(" "),l("h4",[s._v("2、map")]),s._v(" "),l("p",[s._v("\n                map 方法的作用不难理解，“映射”嘛，也就是原数组被 “映射” 成对应的新数组。基本用法跟 forEach 方法类似："),l("code",[s._v("[].map(function(item, index, array) {});")]),l("br"),s._v("\n                下面这个例子是数值项求平方：\n                "),l("pre",{staticClass:"hljs actionscript"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" data = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("];"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arrayOfSquares = data.map("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),l("span",{staticClass:"hljs-params"},[s._v("(item)")]),s._v(" ")]),s._v("{"),l("br"),s._v("    "),l("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" item * item;"),l("br"),s._v("});"),l("br"),s._v("alert(arrayOfSquares); "),l("span",{staticClass:"hljs-comment"},[s._v("// 1, 4, 9, 16")])])])]),s._v(" "),l("h4",[s._v("3、filter")]),s._v(" "),l("p",[s._v("\n                filter 为 “过滤”、“筛选” 之意。指数组 filter 后，返回过滤后的新数组。用法跟 map 极为相似："),l("code",[s._v("[].filter(function(item, index, array) {});")]),s._v("。\n            ")]),s._v(" "),l("p",[s._v("\n                filter 的 callback 函数，需要返回布尔值 true 或 false。返回值只要"),l("strong",[s._v("弱等于")]),s._v("Boolean 就行，看下面这个例子：\n                "),l("pre",{staticClass:"hljs javascript"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" data = ["),l("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("];"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arrayFilter = data.filter("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),l("span",{staticClass:"hljs-params"},[s._v("item")]),s._v(") ")]),s._v("{"),l("br"),s._v("    "),l("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" item;"),l("br"),s._v("});"),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(arrayFilter); "),l("span",{staticClass:"hljs-comment"},[s._v("// [1, 2, 3]")])])])]),s._v(" "),l("h4",[s._v("4、some 和 every")]),s._v(" "),l("p",[s._v("\n                some 意指“某些”，指是否 “某些项” 合乎条件。也就是"),l("strong",[s._v("只要有1值个让 callback 返回 true 就行了")]),s._v("。基本用法："),l("code",[s._v("[].som(function(item, index, array) {});")]),s._v(" "),l("pre",{staticClass:"hljs mipsasm"},[l("code",{},[s._v("const "),l("span",{staticClass:"hljs-keyword"},[s._v("scores ")]),s._v("= ["),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("8")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("10")]),s._v("]"),l("span",{staticClass:"hljs-comment"},[s._v(";")]),l("br"),s._v("const current = "),l("span",{staticClass:"hljs-number"},[s._v("7")]),l("span",{staticClass:"hljs-comment"},[s._v(";")]),l("br"),l("br"),s._v("function higherThanCurrent("),l("span",{staticClass:"hljs-keyword"},[s._v("score) ")]),s._v("{"),l("br"),s._v("    return "),l("span",{staticClass:"hljs-keyword"},[s._v("score ")]),s._v("> current"),l("span",{staticClass:"hljs-comment"},[s._v(";")]),l("br"),s._v("}"),l("br"),l("br"),s._v("if ("),l("span",{staticClass:"hljs-keyword"},[s._v("scores.some(higherThanCurrent)) ")]),s._v("{"),l("br"),s._v("    alert("),l("span",{staticClass:"hljs-string"},[s._v('"one more"')]),s._v(")"),l("span",{staticClass:"hljs-comment"},[s._v(";")]),l("br"),s._v("}")])]),s._v("\n\n                every 跟 some 是一对好基友，同样是返回 Boolean 值。但必须满足每 1 个值都要让 callback 返回 true 才行。改动一下上面 some 的例子：\n                "),l("pre",{staticClass:"hljs applescript"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (scores."),l("span",{staticClass:"hljs-keyword"},[s._v("every")]),s._v("(higherThanCurrent)) {"),l("br"),s._v("    console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("("),l("span",{staticClass:"hljs-string"},[s._v('"every is ok!"')]),s._v(");"),l("br"),s._v("} "),l("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),l("br"),s._v("    console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("("),l("span",{staticClass:"hljs-string"},[s._v('"oh no!"')]),s._v(");        "),l("br"),s._v("}")])])]),s._v(" "),l("h4",[s._v("5、concat")]),s._v(" "),l("p",[s._v("\n                concat() 方法用于连接两个或多个数组。该方法不会改变现有的数组，仅会返回被连接数组的一个副本。\n                "),l("pre",{staticClass:"hljs processing"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr1 = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("];"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr2 = ["),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v("];"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr3 = arr1."),l("span",{staticClass:"hljs-built_in"},[s._v("concat")]),s._v("(arr2);"),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(arr1); "),l("span",{staticClass:"hljs-comment"},[s._v("// [1, 2, 3]")]),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(arr3); "),l("span",{staticClass:"hljs-comment"},[s._v("// [1, 2, 3, 4, 5]")])])])]),s._v(" "),l("h4",[s._v("6、indexOf 和 lastIndexOf")]),s._v(" "),l("p",[s._v("\n                indexOf 方法在字符串中自古就有，string.indexOf(searchString, position)。数组这里的 indexOf 方法与之类似。"),l("br"),s._v('\n                返回整数索引值，如果没有匹配（严格匹配），返回-1. fromIndex可选，表示从这个位置开始搜索，若缺省或格式不合要求，使用默认值0，我在FireFox下测试，发现使用字符串数值也是可以的，例如"3"和3都可以。\n                '),l("pre",{staticClass:"hljs xl"},[l("code",{},[s._v("const "),l("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(" = ["),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v("];"),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(".indexOf("),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v('"x"')]),s._v("));  "),l("span",{staticClass:"hljs-comment"},[s._v('// 1 ("x"被忽略)')]),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(".indexOf("),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v('"3"')]),s._v(")); "),l("span",{staticClass:"hljs-comment"},[s._v("// 4 (从3号位开始搜索)")]),l("br"),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(".indexOf("),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("));    "),l("span",{staticClass:"hljs-comment"},[s._v("// -1 (未找到)")]),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(".indexOf("),l("span",{staticClass:"hljs-string"},[s._v('"5"')]),s._v(")); "),l("span",{staticClass:"hljs-comment"},[s._v('// -1 (未找到，因为5 !== "5")')])])]),s._v("\n                lastIndexOf 则是从后往前找。\n                "),l("pre",{staticClass:"hljs lsl"},[l("code",{},[s._v("const numbers = ["),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("9")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("];"),l("br"),s._v("numbers.lastIndexOf("),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(");     "),l("span",{staticClass:"hljs-comment"},[s._v("// 3")]),l("br"),s._v("numbers.lastIndexOf("),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(");     "),l("span",{staticClass:"hljs-comment"},[s._v("// -1")]),l("br"),s._v("numbers.lastIndexOf("),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(");  "),l("span",{staticClass:"hljs-comment"},[s._v("// 3")]),l("br"),s._v("numbers.lastIndexOf("),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(");  "),l("span",{staticClass:"hljs-comment"},[s._v("// 0")]),l("br"),s._v("numbers.lastIndexOf("),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("-2")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// 0")]),l("br"),s._v("numbers.lastIndexOf("),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("-1")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// 3")])])])]),s._v(" "),l("h4",[s._v("7、reduce 和 reduceRight")]),s._v(" "),l("p",[s._v("\n                reduce 是JavaScript 1.8 中才引入的，中文意思为“归约”。基本用法："),l("code",[s._v("reduce(callback[, initialValue])")]),s._v("。"),l("br"),s._v("\n                callback 函数接受4个参数：之前值(previousValue)、当前值(currentValue)、索引值(currentIndex)以及数组本身(array)。"),l("br"),s._v("\n                可选的初始值(initialValue)，作为第一次调用回调函数时传给previousValue的值。也就是，为累加等操作传入起始值（额外的加值）。\n                "),l("pre",{staticClass:"hljs javascript"},[l("code",{},[s._v("var "),l("span",{staticClass:"hljs-built_in"},[s._v("sum")]),s._v(" = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("].reduce("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),l("span",{staticClass:"hljs-params"},[s._v("(previous, current, index, array)")]),s._v(" {")]),l("br"),s._v("    "),l("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" previous + current;"),l("br"),s._v("});"),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("("),l("span",{staticClass:"hljs-built_in"},[s._v("sum")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// 10")])])]),s._v("\n                解析：\n                "),l("ul",[l("li",[s._v("因为initialValue不存在，因此一开始的previous值等于数组的第一个元素")]),s._v(" "),l("li",[s._v("从而 current 值在第一次调用的时候就是2")]),s._v(" "),l("li",[s._v("最后两个参数为索引值 index 以及数组本身 array")])]),s._v("\n                以下为循环执行过程：\n                "),l("pre",{staticClass:"hljs lsl"},[l("code",{},[l("span",{staticClass:"hljs-comment"},[s._v("// 初始设置")]),l("br"),s._v("previous = initialValue = "),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", current = "),l("span",{staticClass:"hljs-number"},[s._v("2")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 第一次迭代")]),l("br"),s._v("previous = ("),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(" + "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(") =  "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", current = "),l("span",{staticClass:"hljs-number"},[s._v("3")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 第二次迭代")]),l("br"),s._v("previous = ("),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(" + "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(") =  "),l("span",{staticClass:"hljs-number"},[s._v("6")]),s._v(", current = "),l("span",{staticClass:"hljs-number"},[s._v("4")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 第三次迭代")]),l("br"),s._v("previous = ("),l("span",{staticClass:"hljs-number"},[s._v("6")]),s._v(" + "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(") =  "),l("span",{staticClass:"hljs-number"},[s._v("10")]),s._v(", current = undefined (退出)")])])]),s._v(" "),l("p",[s._v("\n                有了reduce，我们可以轻松实现二维数组的扁平化：\n                "),l("pre",{staticClass:"hljs javascript"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" matrix = ["),l("br"),s._v("  ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("],"),l("br"),s._v("  ["),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("],"),l("br"),s._v("  ["),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("6")]),s._v("]"),l("br"),s._v("];"),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 二维数组扁平化")]),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" flatten = matrix.reduce("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),l("span",{staticClass:"hljs-params"},[s._v("previous, current")]),s._v(") ")]),s._v("{"),l("br"),s._v("    "),l("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" previous.concat(current);"),l("br"),s._v("});"),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(flatten); "),l("span",{staticClass:"hljs-comment"},[s._v("// [1, 2, 3, 4, 5, 6]")])])])]),s._v(" "),l("p",[s._v("\n                reduceRight 跟 reduce 相比，用法类似。实现上差异在于reduceRight是从数组的末尾开始实现。\n                "),l("pre",{staticClass:"hljs fortran"},[l("code",{},[s._v("const "),l("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(" = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("];"),l("br"),s._v("const specialDiff = "),l("span",{staticClass:"hljs-keyword"},[s._v("data")]),s._v(".reduceRight("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-keyword"},[s._v("function")])]),s._v(" (previous, current, "),l("span",{staticClass:"hljs-built_in"},[s._v("index")]),s._v(") {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),l("span",{staticClass:"hljs-built_in"},[s._v("index")]),s._v(" == "),l("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(") {"),l("br"),s._v("        "),l("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" previous + current;"),l("br"),s._v("    }"),l("br"),s._v("    "),l("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" previous - current;"),l("br"),s._v("});"),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(specialDiff);  // "),l("span",{staticClass:"hljs-number"},[s._v("0")])])]),s._v("\n                我们一步一步查看循环执行：\n                "),l("pre",{staticClass:"hljs lsl"},[l("code",{},[l("span",{staticClass:"hljs-comment"},[s._v("// 初始设置")]),l("br"),s._v("index = "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", previous = initialValue = "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(", current = "),l("span",{staticClass:"hljs-number"},[s._v("3")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 第一次迭代")]),l("br"),s._v("index = "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", previous = ("),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("- "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(") = "),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", current = "),l("span",{staticClass:"hljs-number"},[s._v("2")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 第二次迭代")]),l("br"),s._v("index = "),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", previous = ("),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(" - "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(") = "),l("span",{staticClass:"hljs-number"},[s._v("-1")]),s._v(", current = "),l("span",{staticClass:"hljs-number"},[s._v("1")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 第三次迭代")]),l("br"),s._v("index = "),l("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", previous = ("),l("span",{staticClass:"hljs-number"},[s._v("-1")]),s._v(" + "),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(") = "),l("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", current = undefined (退出)")])])]),s._v(" "),l("h4",[s._v("8、push 和 pop")]),s._v(" "),l("p",[s._v("\n                push() 方法可向数组的末尾添加一个或多个元素，返回的是新的数组长度，会改变原数组。\n                "),l("pre",{staticClass:"hljs cpp"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" a = ["),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("];"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" b = a.push("),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(");"),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(a);  "),l("span",{staticClass:"hljs-comment"},[s._v("// [2,3,4,5]")]),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(b);  "),l("span",{staticClass:"hljs-comment"},[s._v("// 4")]),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// push方法可以一次添加多个元素push(data1, data2....)")])])])]),s._v(" "),l("p",[s._v("\n                pop() 方法用于删除并返回数组的最后一个元素。返回的是最后一个元素，会改变原数组。\n                "),l("pre",{staticClass:"hljs cpp"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = ["),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("];"),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(arr.pop()); "),l("span",{staticClass:"hljs-comment"},[s._v("// 4")]),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(arr);  "),l("span",{staticClass:"hljs-comment"},[s._v("// [2,3]")])])])]),s._v(" "),l("h4",[s._v("9、shift 和 unshift")]),s._v(" "),l("p",[s._v("\n                shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。返回第一个元素，改变原数组。\n                "),l("pre",{staticClass:"hljs cpp"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = ["),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("];"),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(arr.shift()); "),l("span",{staticClass:"hljs-comment"},[s._v("// 2")]),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(arr);  "),l("span",{staticClass:"hljs-comment"},[s._v("// [3,4]")])])])]),s._v(" "),l("p",[s._v("\n                unshift() 方法可向数组的开头添加一个或更多元素，并返回新的长度。返回新长度，改变原数组。\n                "),l("pre",{staticClass:"hljs lsl"},[l("code",{},[s._v("const arr = ["),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v("];"),l("br"),s._v("console.log(arr.unshift("),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("6")]),s._v(")); "),l("span",{staticClass:"hljs-comment"},[s._v("// 6")]),l("br"),s._v("console.log(arr); "),l("span",{staticClass:"hljs-comment"},[s._v("// [3, 6, 2, 3, 4, 5]")]),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// tip:该方法可以不传参数,不传参数就是不增加元素。")])])])]),s._v(" "),l("h4",[s._v("10、slice 和 splice")]),s._v(" "),l("p",[s._v("\n                slice() 返回一个新的数组，包含从 start 到 end （不包括该元素）的 arrayObject 中的元素。返回选定的元素，该方法不会修改原数组。\n                "),l("pre",{staticClass:"hljs lsl"},[l("code",{},[s._v("const arr = ["),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v("];"),l("br"),s._v("console.log(arr.slice("),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("));  "),l("span",{staticClass:"hljs-comment"},[s._v("// [3,4]")]),l("br"),s._v("console.log(arr);  "),l("span",{staticClass:"hljs-comment"},[s._v("// [2,3,4,5]")])])])]),s._v(" "),l("p",[s._v("\n                splice() 可删除从 index 处开始的零个或多个元素，并且用参数列表中声明的一个或多个值来替换那些被删除的元素。如果从 arrayObject 中删除了元素，则返回的是含有被删除的元素的数组。splice() 方法会直接对数组进行修改。\n                "),l("pre",{staticClass:"hljs lsl"},[l("code",{},[s._v("const a = ["),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("6")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("8")]),s._v("];"),l("br"),s._v("console.log(a.splice("),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("9")]),s._v(")); "),l("span",{staticClass:"hljs-comment"},[s._v("//[]")]),l("br"),s._v("console.log(a);  "),l("span",{staticClass:"hljs-comment"},[s._v("// [5, 9, 6, 7, 8]")]),l("br"),l("br"),s._v("const b = ["),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("6")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("8")]),s._v("];"),l("br"),s._v("console.log(b.splice("),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("));  "),l("span",{staticClass:"hljs-comment"},[s._v("//[6, 7]")]),l("br"),s._v("console.log(b); "),l("span",{staticClass:"hljs-comment"},[s._v("//[5, 3, 8]")])])])]),s._v(" "),l("h4",[s._v("11、sort 和 reverse")]),s._v(" "),l("p",[s._v("\n                sort() 按照 Unicode code 位置排序，默认升序。\n                "),l("pre",{staticClass:"hljs prolog"},[l("code",{},[s._v("const fruit = ["),l("span",{staticClass:"hljs-string"},[s._v("'cherries'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'apples'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'bananas'")]),s._v("];"),l("br"),s._v("fruit.sort(); // ["),l("span",{staticClass:"hljs-string"},[s._v("'apples'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'bananas'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'cherries'")]),s._v("]"),l("br"),l("br"),s._v("const scores = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("10")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("21")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("];"),l("br"),s._v("scores.sort(); // ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("10")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("21")]),s._v("]")])])]),s._v(" "),l("p",[s._v("\n                reverse() 方法用于颠倒数组中元素的顺序。返回的是颠倒后的数组，会改变原数组。\n                "),l("pre",{staticClass:"hljs processing"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = ["),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("];"),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(arr."),l("span",{staticClass:"hljs-built_in"},[s._v("reverse")]),s._v("()); "),l("span",{staticClass:"hljs-comment"},[s._v("// [4, 3, 2]")]),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(arr);  "),l("span",{staticClass:"hljs-comment"},[s._v("// [4, 3, 2]")])])])]),s._v(" "),l("h4",[s._v("12、join")]),s._v(" "),l("p",[s._v("\n                join() 方法用于把数组中的所有元素放入一个字符串。元素是通过指定的分隔符进行分隔的，默认使用','号分割，不改变原数组。\n                "),l("pre",{staticClass:"hljs processing"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = ["),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(","),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("];"),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(arr."),l("span",{staticClass:"hljs-built_in"},[s._v("join")]),s._v("());  "),l("span",{staticClass:"hljs-comment"},[s._v("// 2,3,4")]),l("br"),s._v("console."),l("span",{staticClass:"hljs-built_in"},[s._v("log")]),s._v("(arr);  "),l("span",{staticClass:"hljs-comment"},[s._v("// [2, 3, 4]")])])])]),s._v(" "),l("h4",[s._v("13、isArray")]),s._v(" "),l("p",[s._v("\n                Array.isArray() 用于确定传递的值是否是一个 Array。一个比较冷门的知识点：其实 Array.prototype 也是一个数组。\n                "),l("pre",{staticClass:"hljs typescript"},[l("code",{},[l("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".isArray([]); "),l("span",{staticClass:"hljs-comment"},[s._v("// true")]),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".isArray("),l("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".prototype); "),l("span",{staticClass:"hljs-comment"},[s._v("// true")]),l("br"),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".isArray("),l("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// false")]),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".isArray("),l("span",{staticClass:"hljs-literal"},[s._v("undefined")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// false")]),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".isArray("),l("span",{staticClass:"hljs-number"},[s._v("18")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// false")]),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".isArray("),l("span",{staticClass:"hljs-string"},[s._v("'Array'")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// false")]),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".isArray("),l("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// false")]),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".isArray({ __proto__: "),l("span",{staticClass:"hljs-built_in"},[s._v("Array")]),s._v(".prototype });")])]),s._v("\n                在公用库中，一般会这么做 isArray 的判断：\n                "),l("pre",{staticClass:"hljs typescript"},[l("code",{staticStyle:{"word-break":"break-word","white-space":"initial"}},[l("span",{staticClass:"hljs-built_in"},[s._v("Object")]),s._v(".prototype.toString.call(arg) === "),l("span",{staticClass:"hljs-string"},[s._v("'[object Array]'")]),s._v(";")])])]),s._v(" "),l("h2",[s._v("ES6 新增的 Array 操作")]),s._v(" "),l("h4",[s._v("1、find 和 findIndex")]),s._v(" "),l("p",[s._v("\n                find() 传入一个回调函数，找到数组中符合当前搜索规则的第一个元素，返回这个元素，并且终止搜索。\n                "),l("pre",{staticClass:"hljs javascript"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v('"2"')]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v('"2"')]),s._v("]"),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(arr.find("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[s._v("n")]),s._v(" =>")]),s._v(" "),l("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" n === "),l("span",{staticClass:"hljs-string"},[s._v('"number"')]),s._v(")) "),l("span",{staticClass:"hljs-comment"},[s._v("// 1")])])]),s._v("\n\n                findIndex() 与 find() 类似，只是返回的是，找到的这个元素的下标。\n                "),l("pre",{staticClass:"hljs javascript"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v('"2"')]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v('"2"')]),s._v("]"),l("br"),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(arr.findIndex("),l("span",{staticClass:"hljs-function"},[l("span",{staticClass:"hljs-params"},[s._v("n")]),s._v(" =>")]),s._v(" "),l("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" n === "),l("span",{staticClass:"hljs-string"},[s._v('"number"')]),s._v(")) "),l("span",{staticClass:"hljs-comment"},[s._v("// 0")])])])]),s._v(" "),l("h4",[s._v("2、fill")]),s._v(" "),l("p",[s._v("\n                用指定的元素填充数组，其实就是用默认内容初始化数组。基本用法："),l("code",[s._v("[].fill(value, start, end)")]),l("br"),s._v("\n                该函数有三个参数：填充值(value)，填充起始位置(start，可以省略)，填充结束位置(end，可以省略，实际结束位置是end-1)。\n                "),l("pre",{staticClass:"hljs lsl"},[l("code",{},[l("span",{staticClass:"hljs-comment"},[s._v("// 采用一个默认值，填充数组")]),l("br"),s._v("const arr1 = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("6")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("8")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("9")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("10")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("11")]),s._v("];"),l("br"),s._v("arr1.fill("),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(");"),l("br"),s._v("console.log(arr1); "),l("span",{staticClass:"hljs-comment"},[s._v("// [7,7,7,7,7,7,7,7,7,7,7]")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 制定开始和结束位置填充，实际填充结束位置是前一位。")]),l("br"),s._v("const arr2 = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("6")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("8")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("9")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("10")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("11")]),s._v("];"),l("br"),s._v("arr2.fill("),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(");"),l("br"),s._v("console.log(arr2); "),l("span",{staticClass:"hljs-comment"},[s._v("// [1,2,7,7,7,6,7,8,9,10,11]")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 结束位置省略，从起始位置到最后。")]),l("br"),s._v("const arr3 = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("6")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("8")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("9")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("10")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("11")]),s._v("];"),l("br"),s._v("arr3.fill("),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(");"),l("br"),s._v("console.log(arr3); "),l("span",{staticClass:"hljs-comment"},[s._v("// [1,2,7,7,7,7,7,7,7,7,7]")])])])]),s._v(" "),l("h4",[s._v("3、from")]),s._v(" "),l("p",[s._v("\n                将类似数组的对象（array-like object）和可遍历（iterable）的对象转为真正的数组。\n                "),l("pre",{staticClass:"hljs oxygene"},[l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" "),l("span",{staticClass:"hljs-keyword"},[s._v("set")]),s._v(" = "),l("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),l("span",{staticClass:"hljs-keyword"},[s._v("Set")]),s._v("("),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(");"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("Array")]),s._v(".from("),l("span",{staticClass:"hljs-keyword"},[s._v("set")]),s._v(")  "),l("span",{staticClass:"hljs-comment"},[s._v("// [1,2,3,4]")]),l("br"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("Array")]),s._v(".from("),l("span",{staticClass:"hljs-string"},[s._v("'foo'")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v('// ["f", "o", "o"]')])])]),s._v(" "),l("h4",[s._v("4、of")]),s._v(" "),l("p",[s._v("\n                Array.of() 方法创建一个具有可变数量参数的新数组实例，而不考虑参数的数量或类型。"),l("br"),s._v("\n                Array.of() 和 Array 构造函数之间的区别在于处理整数参数：Array.of(7) 创建一个具有单个元素 7 的数组，而 Array(7) 创建一个长度为7的空数组（注意：这是指一个有7个空位的数组，而不是由7个undefined组成的数组）。\n                "),l("pre",{staticClass:"hljs lsl"},[l("code",{},[s._v("Array.of("),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(");       "),l("span",{staticClass:"hljs-comment"},[s._v("// [7] ")]),l("br"),s._v("Array.of("),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// [1, 2, 3]")]),l("br"),l("br"),s._v("Array("),l("span",{staticClass:"hljs-number"},[s._v("7")]),s._v(");          "),l("span",{staticClass:"hljs-comment"},[s._v("// [ , , , , , , ]")]),l("br"),s._v("Array("),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(");    "),l("span",{staticClass:"hljs-comment"},[s._v("// [1, 2, 3]")])])])]),s._v(" "),l("h4",[s._v("5、copyWithin")]),s._v(" "),l("p",[s._v("\n                选择数组的某个下标，从该位置开始复制数组元素，默认从0开始复制。也可以指定要复制的元素范围。基本用法："),l("code",[s._v("[].copyWithin(target, start, end)")]),s._v(" "),l("pre",{staticClass:"hljs lsl"},[l("code",{},[s._v("const arr = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v("];"),l("br"),s._v("console.log(arr.copyWithin("),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("));"),l("br"),s._v(" "),l("span",{staticClass:"hljs-comment"},[s._v("// [1,2,3,1,2] 从下标为3的元素开始，复制数组，所以4, 5被替换成1, 2")]),l("br"),l("br"),s._v("const arr1 = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v("];"),l("br"),s._v("console.log(arr1.copyWithin("),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(")); "),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// [1,2,3,2,3] 从下标为3的元素开始，复制数组，指定复制的第一个元素下标为1，所以4, 5被替换成2, 3")]),l("br"),l("br"),s._v("const arr2 = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("5")]),s._v("];"),l("br"),s._v("console.log(arr2.copyWithin("),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("));"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// [1,2,3,2,5] 从下标为3的元素开始，复制数组，指定复制的第一个元素下标为1，结束位置为2，所以4被替换成2")])])])]),s._v(" "),l("h4",[s._v("6、includes")]),s._v(" "),l("p",[s._v("\n                判断数组中是否存在该元素，参数：查找的值、起始位置，可以替换 ES5 时代的 indexOf 判断方式。\n                "),l("pre",{staticClass:"hljs lsl"},[l("code",{},[s._v("const arr = ["),l("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(", "),l("span",{staticClass:"hljs-number"},[s._v("3")]),s._v("];"),l("br"),s._v("arr.includes("),l("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// true")]),l("br"),s._v("arr.includes("),l("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("); "),l("span",{staticClass:"hljs-comment"},[s._v("// false")])])]),s._v("\n                另外，它还可以用于优化 "),l("code",[s._v("||")]),s._v(" 的判断写法。\n                "),l("pre",{staticClass:"hljs r"},[l("code",{},[l("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (method === "),l("span",{staticClass:"hljs-string"},[s._v("'post'")]),s._v(" || method === "),l("span",{staticClass:"hljs-string"},[s._v("'put'")]),s._v(" || method === "),l("span",{staticClass:"hljs-string"},[s._v("'delete'")]),s._v(") {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-keyword"},[s._v("...")]),l("br"),s._v("}"),l("br"),l("br"),s._v("// 用 includes 优化 || 的写法"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (["),l("span",{staticClass:"hljs-string"},[s._v("'post'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'put'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'delete'")]),s._v("].includes(method)) {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-keyword"},[s._v("...")]),l("br"),s._v("}")])])]),s._v(" "),l("h4",[s._v("7、entries、values 和 keys")]),s._v(" "),l("p",[s._v("\n                entries() 返回迭代器：返回键值对\n                "),l("pre",{staticClass:"hljs javascript"},[l("code",{},[l("span",{staticClass:"hljs-comment"},[s._v("//数组")]),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = ["),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'c'")]),s._v("];"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" v "),l("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" arr.entries()) {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(v)"),l("br"),s._v("}"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// [0, 'a'] [1, 'b'] [2, 'c']")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("//Set")]),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = "),l("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),l("span",{staticClass:"hljs-built_in"},[s._v("Set")]),s._v("(["),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'c'")]),s._v("]);"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" v "),l("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" arr.entries()) {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(v)"),l("br"),s._v("}"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// ['a', 'a'] ['b', 'b'] ['c', 'c']")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("//Map")]),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = "),l("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),l("span",{staticClass:"hljs-built_in"},[s._v("Map")]),s._v("();"),l("br"),s._v("arr.set("),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(");"),l("br"),s._v("arr.set("),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(");"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" v "),l("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" arr.entries()) {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(v)"),l("br"),s._v("}"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// ['a', 'a'] ['b', 'b']")])])]),s._v("\n\n                values() 返回迭代器：返回键值对的 value\n                "),l("pre",{staticClass:"hljs javascript"},[l("code",{},[l("span",{staticClass:"hljs-comment"},[s._v("//数组")]),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = ["),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'c'")]),s._v("];"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" v "),l("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" arr.values()) {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(v)"),l("br"),s._v("}"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("//'a' 'b' 'c'")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("//Set")]),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = "),l("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),l("span",{staticClass:"hljs-built_in"},[s._v("Set")]),s._v("(["),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'c'")]),s._v("]);"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" v "),l("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" arr.values()) {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(v)"),l("br"),s._v("}"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 'a' 'b' 'c'")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("//Map")]),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = "),l("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),l("span",{staticClass:"hljs-built_in"},[s._v("Map")]),s._v("();"),l("br"),s._v("arr.set("),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(");"),l("br"),s._v("arr.set("),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(");"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" v "),l("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" arr.values()) {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(v)"),l("br"),s._v("}"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 'a' 'b'")])])]),s._v("\n\n                keys() 返回迭代器：返回键值对的 key\n                "),l("pre",{staticClass:"hljs javascript"},[l("code",{},[l("span",{staticClass:"hljs-comment"},[s._v("//数组")]),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = ["),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'c'")]),s._v("];"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" v "),l("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" arr.keys()) {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(v)"),l("br"),s._v("}"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 0 1 2")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("//Set")]),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = "),l("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),l("span",{staticClass:"hljs-built_in"},[s._v("Set")]),s._v("(["),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'c'")]),s._v("]);"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" v "),l("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" arr.keys()) {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(v)"),l("br"),s._v("}"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 'a' 'b' 'c'")]),l("br"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("//Map")]),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" arr = "),l("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),l("span",{staticClass:"hljs-built_in"},[s._v("Map")]),s._v("();"),l("br"),s._v("arr.set("),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'a'")]),s._v(");"),l("br"),s._v("arr.set("),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(", "),l("span",{staticClass:"hljs-string"},[s._v("'b'")]),s._v(");"),l("br"),l("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v("("),l("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" v "),l("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" arr.keys()) {"),l("br"),s._v("    "),l("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(v)"),l("br"),s._v("}"),l("br"),l("span",{staticClass:"hljs-comment"},[s._v("// 'a' 'b'")])])])]),s._v(" "),l("h2",[s._v("总结")]),s._v(" "),l("p",[s._v("\n                操作 Array 的数据结构，在日常工作中会经常遇到。ES6 在 Array 的操作上，也提供了更为简便实用的方法，比如 includes、find、from 等等。\n            ")]),s._v(" "),l("p",[s._v("\n                过去，我会习惯于用 lodash 的 _.find 方法，现在就可以选择拥抱原生了。\n            ")])])])],1)},[],!1,null,null,null);v.options.__file="array-methods-beyond-es5.vue";a.default=v.exports},vAOG:function(s,a,t){s.exports=t.p+"assets/bg-20190313-01.5ca8bf3.jpg"}}]);