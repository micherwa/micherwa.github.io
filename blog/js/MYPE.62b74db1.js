(window.webpackJsonp=window.webpackJsonp||[]).push([["MYPE"],{MYPE:function(s,a,t){"use strict";t.r(a);var _={},v=t("psIG"),l=Object(v.a)(_,function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{staticClass:"blog-container"},[t("BlogHeader"),s._v(" "),t("BlogContent",[t("div",{attrs:{slot:"content"},slot:"content"},[t("h2",[s._v("前言")]),s._v(" "),t("p",[s._v("\n                上一篇文章 "),t("a",{attrs:{href:"https://juejin.im/post/5cab479cf265da039d325df4",target:"_blank"}},[s._v("「前端面试题系列9」浅拷贝与深拷贝的含义、区别及实现")]),s._v(" 中提到了深拷贝的实现方法，从递归调用，到 JSON，再到终极方案 cloneForce。\n            ")]),s._v(" "),t("p",[s._v("\n                不经让我想到，lodash 中的 "),t("code",[s._v("_.cloneDeep")]),s._v(" 方法。它是如何实现深拷贝的呢？今天，就让我们来具体地解读一下 _.cloneDeep 的源码实现。\n            ")]),s._v(" "),t("p",[s._v("\n                源码中的内容比较多，为了能将知识点讲明白，也为了更好的阅读体验，将会分为上下 2 篇进行解读。今天主要会涉及位掩码、对象判断、数组和正则的深拷贝写法。\n            ")]),s._v(" "),t("p",[s._v("ok，现在就让我们深入源码，共同探索吧~")]),s._v(" "),t("h2",[s._v("_.cloneDeep 的源码实现")]),s._v(" "),t("p",[s._v("\n                它的源码内容很少，因为主要还是靠 baseClone 去实现。\n                "),t("pre",{staticClass:"hljs objectivec"},[t("code",{},[t("span",{staticClass:"hljs-comment"},[s._v("/** Used to compose bitmasks for cloning. */")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("CLONE_DEEP_FLAG")]),s._v(" = "),t("span",{staticClass:"hljs-number"},[s._v("1")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("CLONE_SYMBOLS_FLAG")]),s._v(" = "),t("span",{staticClass:"hljs-number"},[s._v("4")]),t("br"),t("br"),s._v("function cloneDeep(value) {"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" baseClone(value, "),t("span",{staticClass:"hljs-built_in"},[s._v("CLONE_DEEP_FLAG")]),s._v(" | "),t("span",{staticClass:"hljs-built_in"},[s._v("CLONE_SYMBOLS_FLAG")]),s._v(")"),t("br"),s._v("}")])]),s._v("\n                刚看到前两行的常量就懵了，它们的用意是什么？然后，传入 baseClone 的第二个参数，似乎还将那两个常量做了运算，其结果是什么？这么做的目的是什么？\n            ")]),s._v(" "),t("p",[s._v("\n                一番查找之后，终于明白这里其实涉及到了 "),t("code",[s._v("位掩码")]),s._v(" 与 "),t("code",[s._v("位运算")]),s._v(" 的概念。下面就来详细讲解一下。\n            ")]),s._v(" "),t("h4",[s._v("位掩码技术")]),s._v(" "),t("p",[s._v("\n                回到第一行注释："),t("code",[s._v("Used to compose bitmasks for cloning")]),s._v("。意思是，用于构成克隆方法的位掩码。\n            ")]),s._v(" "),t("p",[s._v("\n                从注释看，这里的 "),t("code",[s._v("CLONE_DEEP_FLAG")]),s._v(" 和 "),t("code",[s._v("CLONE_SYMBOLS_FLAG")]),s._v(" 就是位掩码了，而 "),t("code",[s._v("CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG")]),s._v(" 其实是 "),t("strong",[s._v("位运算")]),s._v(" 中的 "),t("code",[s._v("按位或")]),s._v(" 方法。\n            ")]),s._v(" "),t("p",[s._v("\n                这里有个不常见的概念："),t("code",[s._v("位运算")]),s._v("。MDN 上对位运算的解释是：它经常被用来创建、处理以及读取标志位序列——一种类似二进制的变量。虽然可以使用变量代替标志位序列，但是这样可以节省内存（1/32）。\n            ")]),s._v(" "),t("p",[s._v("\n                不过实际开发中，位运算用得很少，主要是因为位运算操作的是二进制位，对开发者来说不太好理解。用得少，就容易生疏。但实际上，位运算是一种很棒的思想，它计算得更快，代码量还更少。位运算，常用于处理同时存在多个布尔选项的情形。掩码中的每个选项的值都是 2 的幂，位运算是 32 位的。\n            ")]),s._v(" "),t("p",[s._v("\n                在计算机程序的世界里，所有的数据都是以二进制的形式储存的。位运算，说白了就是直接对某个数据在内存中的二进制位，进行运算操作。比如 "),t("code",[s._v("&")]),s._v("、"),t("code",[s._v("|")]),s._v("、"),t("code",[s._v("~")]),s._v("、"),t("code",[s._v("^")]),s._v("、"),t("code",[s._v(">>")]),s._v("，这些都是 按位运算符，它们有一些神奇的用法。以系统权限为例：\n                "),t("pre",{staticClass:"hljs objectivec"},[t("code",{},[t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" PERMISSION_A = "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("; "),t("span",{staticClass:"hljs-comment"},[s._v("// 0001")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" PERMISSION_B = "),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("; "),t("span",{staticClass:"hljs-comment"},[s._v("// 0010")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" PERMISSION_C = "),t("span",{staticClass:"hljs-number"},[s._v("4")]),s._v("; "),t("span",{staticClass:"hljs-comment"},[s._v("// 0100")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" PERMISSION_D = "),t("span",{staticClass:"hljs-number"},[s._v("8")]),s._v("; "),t("span",{staticClass:"hljs-comment"},[s._v("// 1000")]),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 当一个用户同时拥有 权限A 和 权限C 时，就产生了一个新的权限")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" mask = PERMISSION_A | PERMISSION_C; "),t("span",{staticClass:"hljs-comment"},[s._v("// 0101，十进制为 5")]),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 判断该用户是否有 权限C，可以取出 权限C 的位掩码")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (mask & PERMISSION_C) {"),t("br"),s._v("    ..."),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 该用户没有 权限A，也没有 权限C")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" mask2 = ~(PERMISSION_A | PERMISSION_C); "),t("span",{staticClass:"hljs-comment"},[s._v("// ~0101 => 1010")]),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 取出 与权限A 不同的部分")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" mask3 = mask ^ PERMISSION_A; "),t("span",{staticClass:"hljs-comment"},[s._v("// 0101 ^ 0001 => 0100")])])])]),s._v(" "),t("p",[s._v("\n                回到源码的 "),t("code",[s._v("CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG")]),s._v(" 就得到一个新的结果传入 baseClone 中，十进制为 5，至于它是用来干什么的，就需要继续深入到 baseClone 的源码中去看了。\n            ")]),s._v(" "),t("h2",[s._v("baseClone 的源码实现")]),s._v(" "),t("p",[s._v("\n                先贴一下源码，其中一些关键的判断已经做了注释\n                "),t("pre",{staticClass:"hljs cs"},[t("code",{},[t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("baseClone")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", bitmask, customizer, key, "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(", stack")]),s._v(")")]),s._v(" {"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" result"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 根据位掩码，切分判断入口")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isDeep = bitmask & CLONE_DEEP_FLAG"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isFlat = bitmask & CLONE_FLAT_FLAG"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isFull = bitmask & CLONE_SYMBOLS_FLAG"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 自定义 clone 方法，用于 _.cloneWith")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (customizer) {"),t("br"),s._v("    result = "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(" ? customizer("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", key, "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(", stack) : customizer("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("  }"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (result !== undefined) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("  }"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 过滤出原始类型，直接返回")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!isObject("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),t("br"),s._v("  }"),t("br"),s._v("  "),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isArr = Array.isArray("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" tag = getTag("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isArr) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理数组")]),t("br"),s._v("    result = initCloneArray("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!isDeep) {"),t("br"),s._v("      "),t("span",{staticClass:"hljs-comment"},[s._v("// 浅拷贝数组")]),t("br"),s._v("      "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" copyArray("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", result)"),t("br"),s._v("    }"),t("br"),s._v("  } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理对象")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isFunc = "),t("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" == "),t("span",{staticClass:"hljs-string"},[s._v("'function'")]),t("br"),s._v("    "),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isBuffer("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")) {"),t("br"),s._v("      "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" cloneBuffer("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", isDeep)"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (tag == objectTag || tag == argsTag || (isFunc && !"),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(")) {"),t("br"),s._v("      result = (isFlat || isFunc) ? {} : initCloneObject("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("      "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!isDeep) {"),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" isFlat"),t("br"),s._v("          ? copySymbolsIn("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", copyObject("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", keysIn("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v("), result))"),t("br"),s._v("          : copySymbols("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", Object.assign(result, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v("))"),t("br"),s._v("      }"),t("br"),s._v("    } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),t("br"),s._v("      "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isFunc || !cloneableTags[tag]) {"),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("object")]),s._v(" ? "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" : {}"),t("br"),s._v("      }"),t("br"),s._v("      result = initCloneByTag("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", tag, isDeep)"),t("br"),s._v("    }"),t("br"),s._v("  }"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 用 “栈” 处理循环引用")]),t("br"),s._v("  stack || (stack = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Stack)"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" stacked = stack."),t("span",{staticClass:"hljs-keyword"},[s._v("get")]),s._v("("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (stacked) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" stacked"),t("br"),s._v("  }"),t("br"),s._v("  stack."),t("span",{staticClass:"hljs-keyword"},[s._v("set")]),s._v("("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", result)"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理 Map")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (tag == mapTag) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(".forEach((subValue, key) => {"),t("br"),s._v("      result."),t("span",{staticClass:"hljs-keyword"},[s._v("set")]),s._v("(key, baseClone(subValue, bitmask, customizer, key, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", stack))"),t("br"),s._v("    })"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("  }"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理 Set")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (tag == setTag) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(".forEach((subValue) => {"),t("br"),s._v("      result."),t("span",{staticClass:"hljs-keyword"},[s._v("add")]),s._v("(baseClone(subValue, bitmask, customizer, subValue, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", stack))"),t("br"),s._v("    })"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("  }"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 处理 typedArray")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isTypedArray("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("  }"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" keysFunc = isFull"),t("br"),s._v("    ? (isFlat ? getAllKeysIn : getAllKeys)"),t("br"),s._v("    : (isFlat ? keysIn : keys)"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" props = isArr ? undefined : keysFunc("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-comment"},[s._v("// 遍历赋值")]),t("br"),s._v("  arrayEach(props || "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", (subValue, key) => {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (props) {"),t("br"),s._v("      key = subValue"),t("br"),s._v("      subValue = "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v("[key]"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// Recursively populate clone (susceptible to call stack limits).")]),t("br"),s._v("    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(", stack))"),t("br"),s._v("  })"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("}"),t("br")])])]),s._v(" "),t("h4",[s._v("位掩码的作用")]),s._v(" "),t("p",[t("pre",{staticClass:"hljs objectivec"},[t("code",{},[t("span",{staticClass:"hljs-comment"},[s._v("/** Used to compose bitmasks for cloning. */")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("CLONE_DEEP_FLAG")]),s._v(" = "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(" "),t("span",{staticClass:"hljs-comment"},[s._v("// 深拷贝标志位")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("CLONE_FLAT_FLAG")]),s._v(" = "),t("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(" "),t("span",{staticClass:"hljs-comment"},[s._v("// 原型链标志位")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("CLONE_SYMBOLS_FLAG")]),s._v(" = "),t("span",{staticClass:"hljs-number"},[s._v("4")]),s._v(" "),t("span",{staticClass:"hljs-comment"},[s._v("// Symbol 标志位")]),t("br"),t("br"),s._v("function baseClone(value, bitmask, customizer, key, object, stack) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// 根据位掩码，取出位掩码，切分判断入口，bitmask 的十进制为 5")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isDeep = bitmask & "),t("span",{staticClass:"hljs-built_in"},[s._v("CLONE_DEEP_FLAG")]),s._v(" "),t("span",{staticClass:"hljs-comment"},[s._v("// 5 & 1 => 1 => true")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isFlat = bitmask & "),t("span",{staticClass:"hljs-built_in"},[s._v("CLONE_FLAT_FLAG")]),s._v(" "),t("span",{staticClass:"hljs-comment"},[s._v("// 5 & 2 => 0 => false")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isFull = bitmask & "),t("span",{staticClass:"hljs-built_in"},[s._v("CLONE_SYMBOLS_FLAG")]),s._v(" "),t("span",{staticClass:"hljs-comment"},[s._v("// 5 & 4 => 4 => true")]),t("br"),s._v("    ..."),t("br"),s._v("}")])]),s._v("\n                每个常量基本都加了注释，之前传入 baseClone 的 bitmask 为十进制的 5，其目的就是为了在 baseClone 中进行判断入口的切分。\n            ")]),s._v(" "),t("h4",[s._v("是否为对象的判断")]),s._v(" "),t("p",[t("pre",{staticClass:"hljs cs"},[t("code",{},[t("span",{staticClass:"hljs-comment"},[s._v("// 如果不是对象，则直接返回该值")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!isObject("),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(")) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// ./isObject.js")]),t("br"),t("span",{staticClass:"hljs-function"},[s._v("function "),t("span",{staticClass:"hljs-title"},[s._v("isObject")]),s._v("("),t("span",{staticClass:"hljs-params"},[t("span",{staticClass:"hljs-keyword"},[s._v("value")])]),s._v(")")]),s._v(" {"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" type = "),t("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("value")]),s._v(" != "),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(" && (type == "),t("span",{staticClass:"hljs-string"},[s._v("'object'")]),s._v(" || type == "),t("span",{staticClass:"hljs-string"},[s._v("'function'")]),s._v(")"),t("br"),s._v("}")])]),s._v("\n                这里需要说的就是，是否为对象的判断。用的基本方法是 "),t("code",[s._v("typeof")]),s._v("，但是因为 typeof null 的值也是 'object'，所以最后的 return 需要对 null 做额外处理。\n            ")]),s._v(" "),t("h4",[s._v("处理数组和正则")]),s._v(" "),t("p",[t("pre",{staticClass:"hljs php"},[t("code",{},[t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" isArr = "),t("span",{staticClass:"hljs-keyword"},[s._v("Array")]),s._v(".isArray(value)"),t("br"),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (isArr) {"),t("br"),s._v("    result = initCloneArray(value)"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!isDeep) {"),t("br"),s._v("        "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" copyArray(value, result)"),t("br"),s._v("    }"),t("br"),s._v("} "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),t("br"),s._v("    ... "),t("span",{staticClass:"hljs-comment"},[s._v("// 非数组的处理")]),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 用于检测对象自身的属性")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" hasOwnProperty = Object.prototype.hasOwnProperty"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 初始化需要克隆的数组")]),t("br"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("initCloneArray")]),t("span",{staticClass:"hljs-params"},[s._v("(array)")]),s._v(" ")]),s._v("{"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" { length } = "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" result = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v(".constructor(length)"),t("br"),t("br"),s._v("    "),t("span",{staticClass:"hljs-comment"},[s._v("// Add properties assigned by `RegExp#exec`.")]),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (length && typeof "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v("["),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("] == "),t("span",{staticClass:"hljs-string"},[s._v("'string'")]),s._v(" && hasOwnProperty.call("),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v(", "),t("span",{staticClass:"hljs-string"},[s._v("'index'")]),s._v(")) {"),t("br"),s._v("        result.index = "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v(".index"),t("br"),s._v("        result.input = "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v(".input"),t("br"),s._v("    }"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result"),t("br"),s._v("}")])]),s._v("\n                为了不干扰源数组的数据，这里首先会用 initCloneArray 初始化一个全新的数组。\n            ")]),s._v(" "),t("p",[s._v("\n                其中，"),t("code",[s._v("new array.constructor(length)")]),s._v(" 相当于 "),t("code",[s._v("new Array(length)")]),s._v("，只是换了种不常见的写法，作用是一样的。\n            ")]),s._v(" "),t("p",[s._v("\n                接下来的这个判断，让我一头雾水。\n                "),t("pre",{staticClass:"hljs php"},[t("code",{},[t("span",{staticClass:"hljs-comment"},[s._v("// Add properties assigned by `RegExp#exec`.")]),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (length && typeof "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v("["),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("] == "),t("span",{staticClass:"hljs-string"},[s._v("'string'")]),s._v(" && hasOwnProperty.call("),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v(", "),t("span",{staticClass:"hljs-string"},[s._v("'index'")]),s._v(")) {"),t("br"),s._v("    result.index = "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v(".index"),t("br"),s._v("    result.input = "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v(".input"),t("br"),s._v("}")])]),s._v("\n                判断条件首先确定 length > 0，然后 array[0] 的类型是 string，最后 array 拥有 index 这个属性。\n            ")]),s._v(" "),t("p",[s._v("\n                看到判断条件里的两条执行语句更懵了，需要赋值 "),t("code",[s._v("index")]),s._v(" 和 "),t("code",[s._v("input")]),s._v("，这又是为什么？/(ㄒoㄒ)/~~\n            ")]),s._v(" "),t("p",[s._v("\n                回头看到第一行注释，有个关键点 "),t("code",[s._v("RegExp#exec")]),s._v("。"),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec",target:"_blank"}},[s._v("MDN")]),s._v(" 中给的解释：exec() 方法在一个指定字符串中执行一个搜索匹配。返回一个结果数组或 null。文档下方有个例子：\n                "),t("pre",{staticClass:"hljs typescript"},[t("code",{},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" re = "),t("span",{staticClass:"hljs-regexp"},[s._v("/quick\\s(brown).+?(jumps)/ig")]),s._v(";"),t("br"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" result = re.exec("),t("span",{staticClass:"hljs-string"},[s._v("'The Quick Brown Fox Jumps Over The Lazy Dog'")]),s._v(");"),t("br"),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(result);"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// 输出的 result 是一个数组，有 3 个元素和 4 个属性")]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v('// 0: "Quick Brown Fox Jumps"')]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v('// 1: "Brown"')]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v('// 2: "Jumps"')]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// groups: undefined")]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// index: 4")]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v('// input: "The Quick Brown Fox Jumps Over The Lazy Dog"')]),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// length: 3")])])]),s._v("\n                哇哦~ 原来 "),t("code",[s._v("index")]),s._v(" 和 "),t("code",[s._v("input")]),s._v(" 在这里。所以，源码中的为何要那样赋值，就迎刃而解了。\n            ")]),s._v(" "),t("p",[s._v("\n                再回到 baseClone 中来，如果不是深拷贝，那就只要做数组的第一层数据的赋值即可。\n                "),t("pre",{staticClass:"hljs php"},[t("code",{},[t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!isDeep) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" copyArray(value, result)"),t("br"),s._v("}"),t("br"),t("br"),t("span",{staticClass:"hljs-comment"},[s._v("// ./copyArray.js")]),t("br"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("copyArray")]),t("span",{staticClass:"hljs-params"},[s._v("(source, array)")]),s._v(" ")]),s._v("{"),t("br"),s._v("  let index = "),t("span",{staticClass:"hljs-number"},[s._v("-1")]),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" length = source.length"),t("br"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v(" || ("),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v(" = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("Array")]),s._v("(length))"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("while")]),s._v(" (++index < length) {"),t("br"),s._v("    "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),s._v("[index] = source[index]"),t("br"),s._v("  }"),t("br"),s._v("  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("array")]),t("br"),s._v("}")])])]),s._v(" "),t("h2",[s._v("总结")]),s._v(" "),t("p",[s._v("\n                位掩码技术，是一种很棒的思想，可以写出更为简洁的代码，运行得也更快。对象的判断，需要特别注意 null，它的 typeof 值 也是 object。正则的 exec() 方法会返回一个结果数组或 null，其中就会有 index 和 input 属性。\n            ")]),s._v(" "),t("p",[s._v("\n                阅读源码的过程比较痛苦，深感自身的不足。从不懂到查阅资料，再到写出来，耗费了我大量的时间，不过写作的过程也给了我不小的收获。修行之路任重而道远，给自己打打气，继续砥砺前行吧。\n            ")]),s._v(" "),t("p",[s._v("\n                未完待续。。。\n            ")]),s._v(" "),t("h2",[s._v("岗位内推")]),s._v(" "),t("p",[s._v("\n                莉莉丝游戏招 "),t("code",[s._v("高级前端")]),s._v(" 啦！！！\n            ")]),s._v(" "),t("p",[s._v("\n                你玩过《"),t("strong",[s._v("小冰冰传奇")]),s._v("（[刀塔传奇]）》么？你玩过《"),t("strong",[s._v("剑与家园")]),s._v("》么？还有本篇的封面，为我司的新游戏《"),t("strong",[s._v("AFK arena")]),s._v("》，现已占领各大海外应用市场（"),t("code",[s._v("友情提示：要小心，这游戏有毒嗷~")]),s._v("）。​\n            ")]),s._v(" "),t("p",[s._v("\n                有兴趣的同学，可以 "),t("strong",[s._v("关注下面的公众号 加我微信")]),s._v(" 详聊哈~\n                "),t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/1/19/1686412fb6f0b803?w=258&h=258&f=jpeg&s=35520"}})])])])],1)},[],!1,null,null,null);l.options.__file="clone-deep-in-lodash-1.vue";a.default=l.exports}}]);