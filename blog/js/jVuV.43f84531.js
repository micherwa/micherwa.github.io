(window.webpackJsonp=window.webpackJsonp||[]).push([["jVuV"],{jVuV:function(s,t,a){"use strict";a.r(t);var v={},n=a("psIG"),l=Object(n.a)(v,function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"blog-container"},[a("BlogHeader"),s._v(" "),a("BlogContent",{attrs:{useCatalog:!0}},[a("div",{attrs:{slot:"content"},slot:"content"},[a("h2",[s._v("JS的基本数据类型、引用数据类型、内置对象")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("基本数据类型(存储在栈中)：Undefined、Null、Boolean、Number、String、Symbol(es6引入)")]),s._v(" "),a("li",[s._v("引用数据类型(存储在堆中)：Object、Array、Function、Date、RegExp")]),s._v(" "),a("li",[s._v("两种类型的区别是：存储位置不同")]),s._v(" "),a("li",[s._v("原始数据类型直接存储在栈(stack)中的简单数据段，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储；")]),s._v(" "),a("li",[s._v("引用数据类型存储在堆(heap)中的对象,占据空间大、大小不固定,如果存储在栈中，将会影响程序运行的性能；引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体")]),s._v(" "),a("li",[s._v("\n                        内置对象：\n                        "),a("ol",[a("li",[s._v("数据封装类：Object、Array、Boolean、Number、String")]),s._v(" "),a("li",[s._v("其他：Function、Arguments、Math、Date、RegExp、Error")]),s._v(" "),a("li",[s._v("ES6新增：Symbol、Map、Set、Promises、Proxy、Reflect")])])])])]),s._v(" "),a("h2",[s._v("解释JavaScript中的作用域、作用域链与变量声明提升")]),s._v(" "),a("p",[s._v("\n                作用域：\n                "),a("ul",[a("li",[s._v("\n                        在过去，JavaScript 的作用域为function(){}内的区域，称为函数作用域。\n                        es6重新定义了作用域的范围，比如for语句、if语句或{}内的一块区域。\n                    ")])]),s._v("\n                作用域链：\n                "),a("ul",[a("li",[s._v("\n                        全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节\n                    ")]),s._v(" "),a("li",[s._v("\n                        如果当前作用域没有找到属性或方法，会向上层作用域查找，直至全局函数，这种形式就是作用域链\n                    ")])]),s._v("\n                变量声明提升：\n                "),a("ul",[a("li",[s._v("\n                        函数声明与变量声明经常被JavaScript引擎隐式地提升到当前作用域的顶部\n                    ")]),s._v(" "),a("li",[s._v("\n                        声明语句中的赋值部分并不会被提升，只有名称被提升\n                    ")]),s._v(" "),a("li",[s._v("\n                        函数声明的优先级高于变量，如果变量名跟函数名相同且未赋值，则函数声明会覆盖变量声明\n                    ")]),s._v(" "),a("li",[s._v("\n                        如果函数有多个同名参数，那么最后一个参数（即使没有定义）会覆盖前面的同名参数\n                    ")])])]),s._v(" "),a("h2",[s._v("介绍JavaScript的原型，原型链，以及特点")]),s._v(" "),a("p",[s._v("\n                原型：\n                "),a("ul",[a("li",[s._v("所有对象中都包含了一个 [proto] 内部属性，这个属性所对应的就是该对象的原型")]),s._v(" "),a("li",[s._v("函数对象，除了原型 [proto] 之外，还预置了 prototype 属性")]),s._v(" "),a("li",[s._v("当函数对象作为构造函数创建实例时，该 prototype 属性值将被作为实例对象的原型 [proto]")])]),s._v("\n                原型链：\n                "),a("ul",[a("li",[s._v("\n                        当一个对象调用的属性/方法自身不存在时，就会去自己 [proto] 关联的前辈 prototype 对象上去找\n                    ")]),s._v(" "),a("li",[s._v("\n                        如果没找到，就会去该 prototype 原型 [proto] 关联的前辈 prototype 去找。依次类推，直到找到属性/方法或 undefined 为止。从而形成了所谓的“原型链”\n                    ")])]),s._v("\n                原型特点：\n                "),a("ul",[a("li",[s._v("对象是通过引用来传递的，当修改原型时，与之相关的对象也会继承这一改变")])])]),s._v(" "),a("h2",[s._v("跨域的解决方案有哪些？")]),s._v(" "),a("p",[a("ul",{staticClass:"p-l-0"},[s._v("\n                    CORS、反向代理、JSONP、设置document.domain(只适用于主域相同子域不同)、window.name + iframe、window.postMessage\n                ")]),s._v("\n                具体可参考：\n                "),a("router-link",{attrs:{to:{name:"cross-domain-in-javascript"}}},[s._v("这篇文章")])],1),s._v(" "),a("h2",[s._v("解释一下JavaScript中的事件循环")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("Javascript是单线程的，所有同步任务都在主线程上执行，形成一个执行栈。")]),s._v(" "),a("li",[s._v('主线程之外，还存在一个"任务队列"（task queue）。只要异步任务有了运行结果，就在"任务队列"之中放置一个事件。')]),s._v(" "),a("li",[s._v('一旦"执行栈"中的所有同步任务执行完毕，系统就会读取"任务队列"，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。')]),s._v(" "),a("li",[s._v("主线程不断重复上面的第三步。")])]),s._v("\n                具体可参考：\n                "),a("router-link",{attrs:{to:{name:"event-loop-in-javascript"}}},[s._v("这篇文章")])],1),s._v(" "),a("h2",[s._v("Javascript中实现异步编程的方法有哪些？")]),s._v(" "),a("p",[a("ul",{staticClass:"pl-l-0"},[s._v("\n                    回调函数、事件监听、发布/订阅、Promise对象、Generator函数(ES6)、Async函数(ES7)\n                ")]),s._v("\n                具体可参考：\n                "),a("router-link",{attrs:{to:{name:"async-in-javascript"}}},[s._v("这篇文章")])],1),s._v(" "),a("h2",[s._v("什么是闭包（closure），为什么要用它？")]),s._v(" "),a("p",[s._v("\n                闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量，利用闭包可以突破作用链域。\n                特点：函数内再嵌套函数，内部函数可以引用外层的参数和变量，参数和变量不会被垃圾回收机制回收。\n                作用：\n                "),a("ul",[a("li",[s._v("\n                        匿名自执行函数  (function (){ ... })();   创建了一个匿名的函数，并立即执行它，由于外部无法引用它内部的变量，因此在执行完后很快就会被释放，关键是这种机制不会污染全局对象。\n                    ")]),s._v(" "),a("li",[s._v("\n                        缓存, 可保留函数内部的值\n                    ")]),s._v(" "),a("li",[s._v("\n                        实现封装和模板\n                    ")])])]),s._v(" "),a("h2",[s._v("介绍Javascript的事件机制")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("\n                        三个阶段：捕获、目标、冒泡\n                    ")]),s._v(" "),a("li",[s._v("\n                        按照W3C标准的事件：首是进入捕获阶段，直到达到目标元素，再进入冒泡阶段\n                    ")]),s._v(" "),a("li",[s._v("\n                        事件委托：是指将事件绑定目标元素的到父元素上，利用冒泡机制触发该事件。优点：可以减少事件注册，节省大量内存占用，将事件应用于动态添加的子元素上。缺点：使用不当会造成事件在不应该触发时触发。"),a("br"),s._v(" "),a("pre",{staticClass:"hljs aspectj"},[a("code",{},[s._v("ulEl.addEventListener("),a("span",{staticClass:"hljs-string"},[s._v("'click'")]),s._v(", function(e){"),a("br"),s._v("    var "),a("span",{staticClass:"hljs-keyword"},[s._v("target")]),s._v(" = event."),a("span",{staticClass:"hljs-keyword"},[s._v("target")]),s._v(" || event.srcElement;"),a("br"),s._v("    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(!!"),a("span",{staticClass:"hljs-keyword"},[s._v("target")]),s._v(" && "),a("span",{staticClass:"hljs-keyword"},[s._v("target")]),s._v(".nodeName.toUpperCase() === "),a("span",{staticClass:"hljs-string"},[s._v('"LI"')]),s._v("){"),a("br"),s._v("        console.log("),a("span",{staticClass:"hljs-keyword"},[s._v("target")]),s._v(".innerHTML);"),a("br"),s._v("    }"),a("br"),s._v("}, "),a("span",{staticClass:"hljs-keyword"},[s._v("false")]),s._v(");")])])]),s._v(" "),a("li",[s._v("阻止事件默认行为："),a("strong",[s._v("W3C: e.preventDefault()")])]),s._v(" "),a("li",[s._v("阻止事件冒泡："),a("strong",[s._v("W3C: e.stopPropagation()")])])]),s._v("\n                具体可参考\n                "),a("router-link",{attrs:{to:{name:"event-principle-in-javascript"}}},[s._v("\n                    这篇文章\n                ")])],1),s._v(" "),a("h2",[s._v("谈谈Javascript对象的浅拷贝与深拷贝")]),s._v(" "),a("p",[s._v("\n                概念的理解：\n                "),a("ul",[a("li",[s._v("深拷贝和浅拷贝只针对像Object, Array这样的引用类型数据")]),s._v(" "),a("li",[s._v("浅拷贝是对对象引用地址进行拷贝，拷贝后，改其中一个对象的属性，则另源对象的属性也会改变")]),s._v(" "),a("li",[s._v("深拷贝会新开一个引用地址进行拷贝，拷贝后，修改一个对象的属性，不会改变源对象的属性")])]),s._v("\n                具体可参考\n                "),a("router-link",{attrs:{to:{name:"copy-object-in-javascript"}}},[s._v("\n                    这篇文章\n                ")])],1),s._v(" "),a("h2",[s._v("写一个通用的事件侦听器函数")]),s._v(" "),a("p",[a("pre",{staticClass:"hljs javascript"},[a("code",{},[a("span",{staticClass:"hljs-comment"},[s._v("// event(事件)工具集，来源：github.com/markyun")]),a("br"),s._v("markyun.Event = {"),a("br"),s._v("    "),a("span",{staticClass:"hljs-comment"},[s._v("// 页面加载完成后")]),a("br"),s._v("    readyEvent : "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("fn")]),s._v(") ")]),s._v("{"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (fn == "),a("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(") {"),a("br"),s._v("            fn = "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(";"),a("br"),s._v("        }"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" oldonload = "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(".onload;"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),a("span",{staticClass:"hljs-keyword"},[s._v("typeof")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(".onload != "),a("span",{staticClass:"hljs-string"},[s._v("'function'")]),s._v(") {"),a("br"),s._v("            "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(".onload = fn;"),a("br"),s._v("        } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),a("br"),s._v("            "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(".onload = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{"),a("br"),s._v("                oldonload();"),a("br"),s._v("                fn();"),a("br"),s._v("            };"),a("br"),s._v("        }"),a("br"),s._v("    },"),a("br"),s._v("    "),a("span",{staticClass:"hljs-comment"},[s._v("// 兼容dom0、dom2、IE方式，来绑定事件")]),a("br"),s._v("    "),a("span",{staticClass:"hljs-comment"},[s._v("// 参数：操作的元素，事件名称，事件处理程序")]),a("br"),s._v("    addEvent: "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("element, type, handler")]),s._v(") ")]),s._v("{"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (element.addEventListener) {"),a("br"),s._v("            "),a("span",{staticClass:"hljs-comment"},[s._v("// 事件类型、需要执行的函数、是否捕捉")]),a("br"),s._v("            element.addEventListener(type, handler, "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(");"),a("br"),s._v("        } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (element.attachEvent) {"),a("br"),s._v("            element.attachEvent("),a("span",{staticClass:"hljs-string"},[s._v("'on'")]),s._v(" + type, "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{"),a("br"),s._v("                handler.call(element);"),a("br"),s._v("            });"),a("br"),s._v("        } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),a("br"),s._v("            element["),a("span",{staticClass:"hljs-string"},[s._v("'on'")]),s._v(" + type] = handler;"),a("br"),s._v("        }"),a("br"),s._v("    },"),a("br"),s._v("    "),a("span",{staticClass:"hljs-comment"},[s._v("// 移除事件")]),a("br"),s._v("    removeEvent: "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("element, type, handler")]),s._v(") ")]),s._v("{"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (element.removeEventListener) {"),a("br"),s._v("            element.removeEventListener(type, handler, "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(");"),a("br"),s._v("        } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (element.datachEvent) {"),a("br"),s._v("            element.detachEvent("),a("span",{staticClass:"hljs-string"},[s._v("'on'")]),s._v(" + type, handler);"),a("br"),s._v("        } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),a("br"),s._v("            element["),a("span",{staticClass:"hljs-string"},[s._v("'on'")]),s._v(" + type] = "),a("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(";"),a("br"),s._v("        }"),a("br"),s._v("    },"),a("br"),s._v("    "),a("span",{staticClass:"hljs-comment"},[s._v("// 阻止事件(主要是事件冒泡，因为IE不支持事件捕获)")]),a("br"),s._v("    stopPropagation: "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("ev")]),s._v(") ")]),s._v("{"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (ev.stopPropagation) {"),a("br"),s._v("            ev.stopPropagation();"),a("br"),s._v("        } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),a("br"),s._v("            ev.cancelBubble = "),a("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(";"),a("br"),s._v("        }"),a("br"),s._v("    },"),a("br"),s._v("    "),a("span",{staticClass:"hljs-comment"},[s._v("// 取消事件的默认行为")]),a("br"),s._v("    preventDefault: "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("event")]),s._v(") ")]),s._v("{"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (event.preventDefault) {"),a("br"),s._v("            event.preventDefault();"),a("br"),s._v("        } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {"),a("br"),s._v("            event.returnValue = "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(";"),a("br"),s._v("        }"),a("br"),s._v("    },"),a("br"),s._v("    "),a("span",{staticClass:"hljs-comment"},[s._v("// 获取事件目标")]),a("br"),s._v("    getTarget: "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("event")]),s._v(") ")]),s._v("{"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" event.target || event.srcElement;"),a("br"),s._v("    },"),a("br"),s._v("    "),a("span",{staticClass:"hljs-comment"},[s._v("// 获取event对象的引用，取到事件的所有信息，确保随时能使用event；")]),a("br"),s._v("    getEvent: "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("e")]),s._v(") ")]),s._v("{"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ev = e || "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(".event;"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!ev) {"),a("br"),s._v("            "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" c = "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".getEvent.caller;"),a("br"),s._v("            "),a("span",{staticClass:"hljs-keyword"},[s._v("while")]),s._v(" (c) {"),a("br"),s._v("                ev = c.arguments["),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("];"),a("br"),s._v("                "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (ev && Event == ev.constructor) {"),a("br"),s._v("                    "),a("span",{staticClass:"hljs-keyword"},[s._v("break")]),s._v(";"),a("br"),s._v("                }"),a("br"),s._v("                c = c.caller;"),a("br"),s._v("            }"),a("br"),s._v("        }"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" ev;"),a("br"),s._v("    }"),a("br"),s._v("};")])])]),s._v(" "),a("h2",[s._v("如何理解this对象")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("this对象是Javascript的内置对象，它总是指向函数的直接调用者")]),s._v(" "),a("li",[s._v("如果有 new 关键字，this 指向 new 出来的实例对象")]),s._v(" "),a("li",[s._v("在事件中，this 指向触发这个事件的对象")])]),s._v("\n                具体可参考\n                "),a("router-link",{attrs:{to:{name:"how-to-use-this-in-javascript"}}},[s._v("\n                    这篇文章\n                ")])],1),s._v(" "),a("h2",[s._v("null，undefined 的区别")]),s._v(" "),a("p",[a("ul",[a("li",[s._v('\n                        undefined :是一个表示"无"的原始值或者说表示"缺少值"，就是此处应该有一个值，但是还没有定义。当尝试读取时会返回 undefined。例如变量被声明了，但没有赋值时，就等于undefined。\n                    ')]),s._v(" "),a("li",[s._v("\n                        null : 是一个对象(空对象, 没有任何属性和方法)，表示一个对象被定义了，值为“空值”。例如作为函数的参数，表示该函数的参数不是对象。还有，在验证null时，一定要使用　=== ，因为 == 无法分别 null 和　undefined\n                    ")])])]),s._v(" "),a("h2",[s._v("介绍 DOM 的发展，以及事件处理方式的不同")]),s._v(" "),a("p",[s._v("\n                各阶段的发展：\n                "),a("ul",[a("li",[s._v("\n                        DOM：文档对象模型（Document Object Model），定义了访问HTML和XML文档的标准，与编程语言及平台无关\n                    ")]),s._v(" "),a("li",[s._v("\n                        DOM0：提供了查询和操作Web文档的内容API。未形成标准，实现混乱。如：document.forms['login']\n                    ")]),s._v(" "),a("li",[s._v("\n                        DOM1：W3C提出标准化的DOM，简化了对文档中任意部分的访问和操作。如：JavaScript中的Document对象\n                    ")]),s._v(" "),a("li",[s._v("\n                        DOM2：原来DOM基础上扩充了鼠标事件等细分模块，增加了对CSS的支持。如：getComputedStyle(elem, pseudo)\n                    ")]),s._v(" "),a("li",[s._v("\n                        DOM3：增加了XPath模块和加载与保存（Load and Save）模块。如：XPathEvaluator\n                    ")])]),s._v("\n                事件处理方式的区别：\n                "),a("ul",[a("li",[s._v("\n                        DOM0：\n                        "),a("ol",[a("li",[s._v("btn.onclick = func;")]),s._v(" "),a("li",[s._v("btn.onclick = null;")])]),s._v("\n                        DOM2：\n                        "),a("ol",[a("li",[s._v("btn.addEventListener('click', func, false);")]),s._v(" "),a("li",[s._v("btn.removeEventListener('click', func, false);")]),s._v(" "),a("li",[s._v('btn.attachEvent("onclick", func);')]),s._v(" "),a("li",[s._v('btn.detachEvent("onclick", func);')])]),s._v("\n                        DOM3：\n                        "),a("ol",[a("li",[s._v('eventUtil.addListener(input, "textInput", func);')]),s._v(" "),a("li",[s._v("eventUtil 是自定义对象，textInput 是DOM3级事件")])])])])]),s._v(" "),a("h2",[s._v("Ajax 是什么? 如何创建一个Ajax？")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("\n                        ajax的全称：Asynchronous Javascript And XML(异步传输+js+xml)。进一步解释：向服务器发送请求的时候，我们不必等待结果，而是可以同时做其他的事情，等到有了结果它自己会根据设定进行后续操作，与此同时，页面是不会发生整页刷新的，提高了用户体验\n                    ")]),s._v(" "),a("li",[s._v("\n                        创建XMLHttpRequest对象,也就是创建一个异步调用对象\n                    ")]),s._v(" "),a("li",[s._v("\n                        建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息\n                    ")]),s._v(" "),a("li",[s._v("\n                        设置响应HTTP请求状态变化的函数\n                    ")]),s._v(" "),a("li",[s._v("\n                        发送HTTP请求\n                    ")]),s._v(" "),a("li",[s._v("\n                        获取异步调用返回的数据\n                    ")]),s._v(" "),a("li",[s._v("\n                        用JavaScript和DOM实现局部刷新\n                    ")])])]),s._v(" "),a("h2",[s._v("内存泄漏是什么？哪些操作会导致内存泄漏？")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("\n                        内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。\n                    ")]),s._v(" "),a("li",[s._v("\n                        会引发内存泄漏的操作：\n                        "),a("ol",[a("li",[s._v("setTimeout 的第一个参数使用字符串而非函数")]),s._v(" "),a("li",[s._v("闭包、控制台日志、循环引用(两个对象相互引用)、未使用 var 声明的全局变量、移除存在绑定事件的DOM元素(IE)")])])])])]),s._v(" "),a("h2",[s._v("介绍call和apply的用法和区别")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("用法：都能继承另一个对象的方法和属性")]),s._v(" "),a("li",[s._v("\n                        区别：参数列表不一样\n                        "),a("ol",[a("li",[s._v("Function.apply(obj, args) args是一个数组,作为参数传给Function")]),s._v(" "),a("li",[s._v("Function.call(obj, arg1, arg2,...)  arg*是参数列表")])])]),s._v(" "),a("li",[s._v("apply的一个妙用：可以将一个数组默认的转化为一个参数列表。例如：有一个数组arr要push进一个新的数组中去, 如果用call的话需要把数组中的元素一个个取出来再push, 而用apply只有Array.prototype.push.apply(this, arr)")])]),s._v("\n                具体可参考\n                "),a("router-link",{attrs:{to:{name:"call-and-apply-and-bind"}}},[s._v("\n                    这篇文章\n                ")])],1),s._v(" "),a("h2",[s._v("Javascript中如何实现继承")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("\n                        构造函数绑定：使用 call 或 apply 方法，将父对象的构造函数绑定在子对象上\n                        "),a("pre",{staticClass:"hljs qml"},[a("code",{},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Cat")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("name,color")]),s._v(")")]),s._v("{"),a("br"),s._v(" 　Animal.apply("),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(", "),a("span",{staticClass:"hljs-built_in"},[s._v("arguments")]),s._v(");"),a("br"),s._v(" 　"),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".name = name;"),a("br"),s._v(" 　"),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".color = "),a("span",{staticClass:"hljs-built_in"},[s._v("color")]),s._v(";"),a("br"),s._v("}")])])]),s._v(" "),a("li",[s._v("\n                        实例继承：将子对象的 prototype 指向父对象的一个实例\n                        "),a("pre",{staticClass:"hljs actionscript"},[a("code",{},[a("span",{staticClass:"hljs-type"},[s._v("Cat")]),s._v(".proto"),a("span",{staticClass:"hljs-keyword"},[s._v("type")]),s._v(" = new "),a("span",{staticClass:"hljs-type"},[s._v("Animal")]),s._v("();"),a("br"),a("span",{staticClass:"hljs-type"},[s._v("Cat")]),s._v(".proto"),a("span",{staticClass:"hljs-keyword"},[s._v("type")]),s._v(".constructor = "),a("span",{staticClass:"hljs-type"},[s._v("Cat")]),s._v(";")])])]),s._v(" "),a("li",[s._v("\n                        拷贝继承：如果把父对象的所有属性和方法，拷贝进子对象\n                        "),a("pre",{staticClass:"hljs actionscript"},[a("code",{},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("extend")]),a("span",{staticClass:"hljs-params"},[s._v("(Child, Parent)")]),s._v(" ")]),s._v("{"),a("br"),s._v("  　"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" p = Parent.prototype;"),a("br"),s._v("  　"),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" c = Child.prototype;"),a("br"),s._v("  　"),a("span",{staticClass:"hljs-keyword"},[s._v("for")]),s._v(" ("),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" i "),a("span",{staticClass:"hljs-keyword"},[s._v("in")]),s._v(" p) {"),a("br"),s._v("      c[i] = p[i];"),a("br"),s._v("    }"),a("br"),s._v("    c.uber = p;"),a("br"),s._v("}")])])]),s._v(" "),a("li",[s._v("\n                        原型继承：将子对象的 prototype 指向父对象的 prototype\n                        "),a("pre",{staticClass:"hljs php"},[a("code",{},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("extend")]),a("span",{staticClass:"hljs-params"},[s._v("(Child, Parent)")]),s._v(" ")]),s._v("{"),a("br"),s._v("    "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" F = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),a("span",{staticClass:"hljs-params"},[s._v("()")])]),s._v("{};"),a("br"),s._v("  　F.prototype = "),a("span",{staticClass:"hljs-keyword"},[s._v("Parent")]),s._v(".prototype;"),a("br"),s._v("  　Child.prototype = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" F();"),a("br"),s._v("  　Child.prototype.constructor = Child;"),a("br"),s._v("  　Child.uber = "),a("span",{staticClass:"hljs-keyword"},[s._v("Parent")]),s._v(".prototype;"),a("br"),s._v("}")])])]),s._v(" "),a("li",[s._v("\n                        ES6 语法糖 extends：class ColorPoint extends Point {}\n                        "),a("pre",{staticClass:"hljs scala"},[a("code",{},[a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("ColorPoint")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Point")]),s._v(" ")]),s._v("{"),a("br"),s._v("    constructor(x, y, color) {"),a("br"),s._v("        "),a("span",{staticClass:"hljs-comment"},[s._v("// 调用父类的constructor(x, y)")]),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("super")]),s._v("(x, y);"),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".color = color;"),a("br"),s._v("    }"),a("br"),s._v("    toString() {"),a("br"),s._v("        "),a("span",{staticClass:"hljs-comment"},[s._v("// 调用父类的toString()")]),a("br"),s._v("        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".color + ' ' + "),a("span",{staticClass:"hljs-keyword"},[s._v("super")]),s._v(".toString();"),a("br"),s._v("    }"),a("br"),s._v("}")])])])]),s._v("\n                具体可参考\n                "),a("router-link",{attrs:{to:{name:"inherit-in-javascript"}}},[s._v("\n                    这篇文章\n                ")])],1),s._v(" "),a("h2",[s._v("介绍函数节流的原理和应用场景")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("\n                        函数节流(throttle)是指阻止一个函数在很短时间间隔内连续调用。 只有当上一次函数执行后达到规定的时间间隔，才能进行下一次调用。 但要保证一个累计最小调用间隔（否则拖拽类的节流都将无连续效果）\n                    ")]),s._v(" "),a("li",[s._v("\n                        函数节流用于 onresize, onscroll 等短时间内会多次触发的事件\n                    ")]),s._v(" "),a("li",[s._v("\n                        原理：使用定时器做时间节流。 当触发一个事件时，先用 setTimout 让这个事件延迟一小段时间再执行。 如果在这个时间间隔内又触发了事件，就 clearTimeout 原来的定时器， 再 setTimeout 一个新的定时器重复以上流程。\n                    ")])]),s._v("\n                简单实现：\n                "),a("pre",{staticClass:"hljs javascript"},[a("code",{},[a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("throttle")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("method, context")]),s._v(") ")]),s._v("{"),a("br"),s._v("     clearTimeout(methor.tId);"),a("br"),s._v("     method.tId = setTimeout("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{"),a("br"),s._v("         method.call(context);"),a("br"),s._v("     }， "),a("span",{staticClass:"hljs-number"},[s._v("100")]),s._v("); "),a("span",{staticClass:"hljs-comment"},[s._v("// 两次调用至少间隔 100ms")]),a("br"),s._v("}"),a("br"),a("span",{staticClass:"hljs-comment"},[s._v("// 调用")]),a("br"),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(".onresize = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{"),a("br"),s._v("    throttle(myFunc, "),a("span",{staticClass:"hljs-built_in"},[s._v("window")]),s._v(");"),a("br"),s._v("}")])])]),s._v(" "),a("h2",[s._v("use strict; 是什么意思？为何要使用它？它对代码哪些限制？")]),s._v(" "),a("p",[s._v("\n                use strict是一种ECMAscript 5 添加的（严格）运行模式,这种模式使得 Javascript 在更严格的条件下运行,使JS编码更加规范化的模式,消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为。\n                对代码的限制：\n                "),a("ul",[a("li",[s._v("变量必须声明后再使用")]),s._v(" "),a("li",[s._v("禁止this指向全局对象")]),s._v(" "),a("li",[s._v("函数的参数不能有同名属性")]),s._v(" "),a("li",[s._v("不能使用with语句")]),s._v(" "),a("li",[s._v("不能对只读属性赋值")]),s._v(" "),a("li",[s._v("不能使用前缀0表示八进制数")]),s._v(" "),a("li",[s._v("不能删除不可删除的属性")]),s._v(" "),a("li",[s._v("不能删除变量delete prop，只能删除属性delete global[prop]")]),s._v(" "),a("li",[s._v("eval不会在它的外层作用域引入变量")]),s._v(" "),a("li",[s._v("eval和arguments不能被重新赋值")]),s._v(" "),a("li",[s._v("arguments不会自动反映函数参数的变化")]),s._v(" "),a("li",[s._v("不能使用arguments.callee和arguments.caller")]),s._v(" "),a("li",[s._v("不能使用fn.caller和fn.arguments获取函数调用的堆栈")]),s._v(" "),a("li",[s._v("增加了保留字（比如protected、static和interface）")])])]),s._v(" "),a("h2",[s._v("new操作符具体干了什么？")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型")]),s._v(" "),a("li",[s._v("属性和方法被加入到 this 引用的对象中")]),s._v(" "),a("li",[s._v("新创建的对象由 this 所引用，并且最后隐式的返回 this")])]),s._v("\n                一个简单的例子：\n                "),a("pre",{staticClass:"hljs abnf"},[a("code",{},[s._v("var obj  = {}"),a("span",{staticClass:"hljs-comment"},[s._v(";")]),a("br"),s._v("obj.__proto__ = Base.prototype"),a("span",{staticClass:"hljs-comment"},[s._v(";")]),a("br"),s._v("Base.call(obj)"),a("span",{staticClass:"hljs-comment"},[s._v(";")])])])]),s._v(" "),a("h2",[s._v("eval是做什么的？为何要避免使用它？")]),s._v(" "),a("p",[a("ul",[a("li",[s._v("它的功能是把对应的字符串解析成JS代码并运行")]),s._v(" "),a("li",[s._v("应该避免使用它，因为不安全，而且非常耗性能（先解析成js语句，再执行）")])])]),s._v(" "),a("h2",[s._v("谈谈JavaScript性能优化")]),s._v(" "),a("p",[a("ul",[a("li",[s._v('遵循严格模式："use strict";')]),s._v(" "),a("li",[s._v("打包压缩，减少请求个数，将js放在页面底部")]),s._v(" "),a("li",[s._v("写代码时，使用局部变量来保存全局变量，缓存 DOM 节点的访问，减少使用闭包，使用 window 对象属性方法时省略 window，减少对象成员嵌套，避免使用 eval() 和 Function() 构造器，给 setTimeout() 和 setInterval() 传递函数而不是字符串作为参数，使用直接量创建对象和数组，最小化重绘(repaint)和回流(reflow)")])])]),s._v(" "),a("h2",[s._v("iOS safari 如何阻止 回弹效果 ？")]),s._v(" "),a("p",[a("pre",{staticClass:"hljs javascript"},[a("code",{},[s._v("$("),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(").ready("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{"),a("br"),s._v("    "),a("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" stopScrolling = "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),a("span",{staticClass:"hljs-params"},[s._v("event")]),s._v(") ")]),s._v("{"),a("br"),s._v("        event.preventDefault();"),a("br"),s._v("    }"),a("br"),s._v("    "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".addEventListener("),a("span",{staticClass:"hljs-string"},[s._v("'touchstart'")]),s._v(", stopScrolling, "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(");"),a("br"),s._v("    "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".addEventListener("),a("span",{staticClass:"hljs-string"},[s._v("'touchmove'")]),s._v(", stopScrolling, "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(");"),a("br"),s._v("});")])])]),s._v(" "),a("h2",[s._v("页面编码和被请求的资源编码如果不一致如何处理？")]),s._v(" "),a("p",[s._v("\n                后端响应头设置 charset，或者 前端页面<meta>设置 charset\n            ")])])])],1)},[],!1,null,null,null);l.options.__file="fe-interview-javascript.vue";t.default=l.exports}}]);